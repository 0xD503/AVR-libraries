
LCD_Nokia_5110.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000508  0000059c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000508  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000084  0080010a  0080010a  000005a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00000618  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002458  00000000  00000000  00000798  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bad  00000000  00000000  00002bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c0d  00000000  00000000  0000379d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000041c  00000000  00000000  000043ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000081e  00000000  00000000  000047c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fa8  00000000  00000000  00004fe6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00005f8e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__ctors_end>
   4:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
   8:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
   c:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  10:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  14:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  18:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  1c:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  20:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  24:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  28:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  2c:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  30:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  34:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  38:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  3c:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  40:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  44:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__vector_17>
  48:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  4c:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  50:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  54:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  58:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  5c:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  60:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>
  64:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 00       	nop
  6a:	00 80       	ld	r0, Z
  6c:	80 80       	ld	r8, Z
  6e:	80 80       	ld	r8, Z
  70:	80 00       	.word	0x0080	; ????
  72:	00 00       	nop
  74:	00 00       	nop
  76:	01 03       	mulsu	r16, r17
  78:	03 03       	mulsu	r16, r19
  7a:	03 03       	mulsu	r16, r19
  7c:	03 01       	movw	r0, r6
	...
  8e:	00 00       	nop
  90:	00 c0       	rjmp	.+0      	; 0x92 <__trampolines_end+0x2a>
  92:	c0 00       	.word	0x00c0	; ????
  94:	00 00       	nop
  96:	00 00       	nop
  98:	00 00       	nop
  9a:	02 86       	std	Z+10, r0	; 0x0a
  9c:	86 86       	std	Z+14, r8	; 0x0e
  9e:	86 86       	std	Z+14, r8	; 0x0e
  a0:	86 02       	muls	r24, r22
  a2:	00 00       	nop
  a4:	00 00       	nop
  a6:	81 c3       	rjmp	.+1794   	; 0x7aa <__data_load_end+0x298>
  a8:	c3 c3       	rjmp	.+1926   	; 0x830 <__data_load_end+0x31e>
  aa:	c3 c3       	rjmp	.+1926   	; 0x832 <__data_load_end+0x320>
  ac:	c3 81       	ldd	r28, Z+3	; 0x03
  ae:	00 00       	nop
  b0:	00 fc       	sbrc	r0, 0
  b2:	7a 06       	cpc	r7, r26
  b4:	06 06       	cpc	r0, r22
  b6:	06 06       	cpc	r0, r22
  b8:	06 7a       	andi	r16, 0xA6	; 166
  ba:	fc 00       	.word	0x00fc	; ????
  bc:	00 7e       	andi	r16, 0xE0	; 224
  be:	bc c0       	rjmp	.+376    	; 0x238 <LCD_Nokia_Init+0xc>
  c0:	c0 c0       	rjmp	.+384    	; 0x242 <LCD_Nokia_Init+0x16>
  c2:	c0 c0       	rjmp	.+384    	; 0x244 <LCD_Nokia_Init+0x18>
  c4:	c0 bc       	out	0x20, r12	; 32
  c6:	7e 00       	.word	0x007e	; ????
	...
  d0:	00 78       	andi	r16, 0x80	; 128
  d2:	fc 00       	.word	0x00fc	; ????
	...
  dc:	00 3c       	cpi	r16, 0xC0	; 192
  de:	7e 00       	.word	0x007e	; ????
  e0:	00 00       	nop
  e2:	02 86       	std	Z+10, r0	; 0x0a
  e4:	86 86       	std	Z+14, r8	; 0x0e
  e6:	86 86       	std	Z+14, r8	; 0x0e
  e8:	86 7a       	andi	r24, 0xA6	; 166
  ea:	fc 00       	.word	0x00fc	; ????
  ec:	00 7e       	andi	r16, 0xE0	; 224
  ee:	bd c3       	rjmp	.+1914   	; 0x86a <__data_load_end+0x358>
  f0:	c3 c3       	rjmp	.+1926   	; 0x878 <__data_load_end+0x366>
  f2:	c3 c3       	rjmp	.+1926   	; 0x87a <__data_load_end+0x368>
  f4:	c3 81       	ldd	r28, Z+3	; 0x03
  f6:	00 00       	nop
  f8:	00 00       	nop
  fa:	02 86       	std	Z+10, r0	; 0x0a
  fc:	86 86       	std	Z+14, r8	; 0x0e
  fe:	86 86       	std	Z+14, r8	; 0x0e
 100:	86 7a       	andi	r24, 0xA6	; 166
 102:	fc 00       	.word	0x00fc	; ????
 104:	00 00       	nop
 106:	81 c3       	rjmp	.+1794   	; 0x80a <__data_load_end+0x2f8>
 108:	c3 c3       	rjmp	.+1926   	; 0x890 <__data_load_end+0x37e>
 10a:	c3 c3       	rjmp	.+1926   	; 0x892 <__data_load_end+0x380>
 10c:	c3 bd       	out	0x23, r28	; 35
 10e:	7e 00       	.word	0x007e	; ????
 110:	00 fc       	sbrc	r0, 0
 112:	78 80       	ld	r7, Y
 114:	80 80       	ld	r8, Z
 116:	80 80       	ld	r8, Z
 118:	80 78       	andi	r24, 0x80	; 128
 11a:	fc 00       	.word	0x00fc	; ????
 11c:	00 00       	nop
 11e:	01 03       	mulsu	r16, r17
 120:	03 03       	mulsu	r16, r19
 122:	03 03       	mulsu	r16, r19
 124:	03 3d       	cpi	r16, 0xD3	; 211
 126:	7e 00       	.word	0x007e	; ????
 128:	00 fc       	sbrc	r0, 0
 12a:	7a 86       	std	Y+10, r7	; 0x0a
 12c:	86 86       	std	Z+14, r8	; 0x0e
 12e:	86 86       	std	Z+14, r8	; 0x0e
 130:	86 02       	muls	r24, r22
 132:	00 00       	nop
 134:	00 00       	nop
 136:	81 c3       	rjmp	.+1794   	; 0x83a <__data_load_end+0x328>
 138:	c3 c3       	rjmp	.+1926   	; 0x8c0 <__data_load_end+0x3ae>
 13a:	c3 c3       	rjmp	.+1926   	; 0x8c2 <__data_load_end+0x3b0>
 13c:	c3 bd       	out	0x23, r28	; 35
 13e:	7e 00       	.word	0x007e	; ????
 140:	00 fc       	sbrc	r0, 0
 142:	7a 86       	std	Y+10, r7	; 0x0a
 144:	86 86       	std	Z+14, r8	; 0x0e
 146:	86 86       	std	Z+14, r8	; 0x0e
 148:	86 02       	muls	r24, r22
 14a:	00 00       	nop
 14c:	00 7e       	andi	r16, 0xE0	; 224
 14e:	bd c3       	rjmp	.+1914   	; 0x8ca <__data_load_end+0x3b8>
 150:	c3 c3       	rjmp	.+1926   	; 0x8d8 <__data_load_end+0x3c6>
 152:	c3 c3       	rjmp	.+1926   	; 0x8da <__data_load_end+0x3c8>
 154:	c3 bd       	out	0x23, r28	; 35
 156:	7e 00       	.word	0x007e	; ????
 158:	00 00       	nop
 15a:	02 06       	cpc	r0, r18
 15c:	06 06       	cpc	r0, r22
 15e:	06 06       	cpc	r0, r22
 160:	06 7a       	andi	r16, 0xA6	; 166
 162:	fc 00       	.word	0x00fc	; ????
	...
 16c:	00 3c       	cpi	r16, 0xC0	; 192
 16e:	7e 00       	.word	0x007e	; ????
 170:	00 fc       	sbrc	r0, 0
 172:	7a 86       	std	Y+10, r7	; 0x0a
 174:	86 86       	std	Z+14, r8	; 0x0e
 176:	86 86       	std	Z+14, r8	; 0x0e
 178:	86 7a       	andi	r24, 0xA6	; 166
 17a:	fc 00       	.word	0x00fc	; ????
 17c:	00 7e       	andi	r16, 0xE0	; 224
 17e:	bd c3       	rjmp	.+1914   	; 0x8fa <__data_load_end+0x3e8>
 180:	c3 c3       	rjmp	.+1926   	; 0x908 <__stack+0x9>
 182:	c3 c3       	rjmp	.+1926   	; 0x90a <__stack+0xb>
 184:	c3 bd       	out	0x23, r28	; 35
 186:	7e 00       	.word	0x007e	; ????
 188:	00 fc       	sbrc	r0, 0
 18a:	7a 86       	std	Y+10, r7	; 0x0a
 18c:	86 86       	std	Z+14, r8	; 0x0e
 18e:	86 86       	std	Z+14, r8	; 0x0e
 190:	86 7a       	andi	r24, 0xA6	; 166
 192:	fc 00       	.word	0x00fc	; ????
 194:	00 00       	nop
 196:	81 c3       	rjmp	.+1794   	; 0x89a <__data_load_end+0x388>
 198:	c3 c3       	rjmp	.+1926   	; 0x920 <__stack+0x21>
 19a:	c3 c3       	rjmp	.+1926   	; 0x922 <__stack+0x23>
 19c:	c3 bd       	out	0x23, r28	; 35
 19e:	7e 00       	.word	0x007e	; ????

000001a0 <__ctors_end>:
 1a0:	11 24       	eor	r1, r1
 1a2:	1f be       	out	0x3f, r1	; 63
 1a4:	cf ef       	ldi	r28, 0xFF	; 255
 1a6:	d8 e0       	ldi	r29, 0x08	; 8
 1a8:	de bf       	out	0x3e, r29	; 62
 1aa:	cd bf       	out	0x3d, r28	; 61

000001ac <__do_copy_data>:
 1ac:	11 e0       	ldi	r17, 0x01	; 1
 1ae:	a0 e0       	ldi	r26, 0x00	; 0
 1b0:	b1 e0       	ldi	r27, 0x01	; 1
 1b2:	e8 e0       	ldi	r30, 0x08	; 8
 1b4:	f5 e0       	ldi	r31, 0x05	; 5
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <__do_copy_data+0x10>
 1b8:	05 90       	lpm	r0, Z+
 1ba:	0d 92       	st	X+, r0
 1bc:	aa 30       	cpi	r26, 0x0A	; 10
 1be:	b1 07       	cpc	r27, r17
 1c0:	d9 f7       	brne	.-10     	; 0x1b8 <__do_copy_data+0xc>

000001c2 <__do_clear_bss>:
 1c2:	21 e0       	ldi	r18, 0x01	; 1
 1c4:	aa e0       	ldi	r26, 0x0A	; 10
 1c6:	b1 e0       	ldi	r27, 0x01	; 1
 1c8:	01 c0       	rjmp	.+2      	; 0x1cc <.do_clear_bss_start>

000001ca <.do_clear_bss_loop>:
 1ca:	1d 92       	st	X+, r1

000001cc <.do_clear_bss_start>:
 1cc:	ae 38       	cpi	r26, 0x8E	; 142
 1ce:	b2 07       	cpc	r27, r18
 1d0:	e1 f7       	brne	.-8      	; 0x1ca <.do_clear_bss_loop>
 1d2:	0e 94 2b 02 	call	0x456	; 0x456 <main>
 1d6:	0c 94 82 02 	jmp	0x504	; 0x504 <_exit>

000001da <__bad_interrupt>:
 1da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001de <LCD_Nokia_Reset>:
{
	LCD_Nokia_DrawRectangle(xLeft, yHigh, xRight, yLow, 1);
}

void LCD_Nokia_DrawUnfilledCircle (uint8_t xO, uint8_t yO, uint8_t radius)
{
 1de:	29 98       	cbi	0x05, 1	; 5
 1e0:	8f e3       	ldi	r24, 0x3F	; 63
 1e2:	9c e9       	ldi	r25, 0x9C	; 156
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <LCD_Nokia_Reset+0x6>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <LCD_Nokia_Reset+0xc>
 1ea:	00 00       	nop
 1ec:	29 9a       	sbi	0x05, 1	; 5
 1ee:	08 95       	ret

000001f0 <LCD_Nokia_PutByte>:
 1f0:	66 23       	and	r22, r22
 1f2:	11 f0       	breq	.+4      	; 0x1f8 <LCD_Nokia_PutByte+0x8>
 1f4:	28 9a       	sbi	0x05, 0	; 5
 1f6:	01 c0       	rjmp	.+2      	; 0x1fa <LCD_Nokia_PutByte+0xa>
 1f8:	28 98       	cbi	0x05, 0	; 5
 1fa:	2a 98       	cbi	0x05, 2	; 5
 1fc:	0e 94 51 02 	call	0x4a2	; 0x4a2 <SPI_PutByte>
 200:	2a 9a       	sbi	0x05, 2	; 5
 202:	08 95       	ret

00000204 <LCD_Nokia_PutCommandByte>:
 204:	60 e0       	ldi	r22, 0x00	; 0
 206:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_Nokia_PutByte>
 20a:	08 95       	ret

0000020c <LCD_Nokia_PutDataByte>:
 20c:	61 e0       	ldi	r22, 0x01	; 1
 20e:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <LCD_Nokia_PutByte>
 212:	08 95       	ret

00000214 <LCD_Nokia_ClearDisplay>:
 214:	cf 93       	push	r28
 216:	df 93       	push	r29
 218:	c8 ef       	ldi	r28, 0xF8	; 248
 21a:	d1 e0       	ldi	r29, 0x01	; 1
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_Nokia_PutDataByte>
 222:	21 97       	sbiw	r28, 0x01	; 1
 224:	d9 f7       	brne	.-10     	; 0x21c <LCD_Nokia_ClearDisplay+0x8>
 226:	df 91       	pop	r29
 228:	cf 91       	pop	r28
 22a:	08 95       	ret

0000022c <LCD_Nokia_Init>:
 22c:	84 b1       	in	r24, 0x04	; 4
 22e:	83 64       	ori	r24, 0x43	; 67
 230:	84 b9       	out	0x04, r24	; 4
 232:	29 9a       	sbi	0x05, 1	; 5
 234:	2a 9a       	sbi	0x05, 2	; 5
 236:	0e 94 ef 00 	call	0x1de	; 0x1de <LCD_Nokia_Reset>
 23a:	81 e2       	ldi	r24, 0x21	; 33
 23c:	0e 94 02 01 	call	0x204	; 0x204 <LCD_Nokia_PutCommandByte>
 240:	80 e9       	ldi	r24, 0x90	; 144
 242:	0e 94 02 01 	call	0x204	; 0x204 <LCD_Nokia_PutCommandByte>
 246:	87 e0       	ldi	r24, 0x07	; 7
 248:	0e 94 02 01 	call	0x204	; 0x204 <LCD_Nokia_PutCommandByte>
 24c:	81 e1       	ldi	r24, 0x11	; 17
 24e:	0e 94 02 01 	call	0x204	; 0x204 <LCD_Nokia_PutCommandByte>
 252:	80 e2       	ldi	r24, 0x20	; 32
 254:	0e 94 02 01 	call	0x204	; 0x204 <LCD_Nokia_PutCommandByte>
 258:	8c e0       	ldi	r24, 0x0C	; 12
 25a:	0e 94 02 01 	call	0x204	; 0x204 <LCD_Nokia_PutCommandByte>
 25e:	0e 94 0a 01 	call	0x214	; 0x214 <LCD_Nokia_ClearDisplay>
 262:	08 95       	ret

00000264 <LCD_Nokia_SetPosition>:
 264:	cf 93       	push	r28
 266:	c6 2f       	mov	r28, r22
 268:	2a 98       	cbi	0x05, 2	; 5
 26a:	80 68       	ori	r24, 0x80	; 128
 26c:	0e 94 02 01 	call	0x204	; 0x204 <LCD_Nokia_PutCommandByte>
 270:	8c 2f       	mov	r24, r28
 272:	80 64       	ori	r24, 0x40	; 64
 274:	0e 94 02 01 	call	0x204	; 0x204 <LCD_Nokia_PutCommandByte>
 278:	2a 9a       	sbi	0x05, 2	; 5
 27a:	cf 91       	pop	r28
 27c:	08 95       	ret

0000027e <LCD_Nokia_PutPixel>:
 27e:	44 23       	and	r20, r20
 280:	c9 f0       	breq	.+50     	; 0x2b4 <LCD_Nokia_PutPixel+0x36>
 282:	96 2f       	mov	r25, r22
 284:	96 95       	lsr	r25
 286:	96 95       	lsr	r25
 288:	96 95       	lsr	r25
 28a:	e8 2f       	mov	r30, r24
 28c:	f0 e0       	ldi	r31, 0x00	; 0
 28e:	84 e5       	ldi	r24, 0x54	; 84
 290:	98 9f       	mul	r25, r24
 292:	e0 0d       	add	r30, r0
 294:	f1 1d       	adc	r31, r1
 296:	11 24       	eor	r1, r1
 298:	e5 5f       	subi	r30, 0xF5	; 245
 29a:	fe 4f       	sbci	r31, 0xFE	; 254
 29c:	67 70       	andi	r22, 0x07	; 7
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <LCD_Nokia_PutPixel+0x2a>
 2a4:	88 0f       	add	r24, r24
 2a6:	99 1f       	adc	r25, r25
 2a8:	6a 95       	dec	r22
 2aa:	e2 f7       	brpl	.-8      	; 0x2a4 <LCD_Nokia_PutPixel+0x26>
 2ac:	92 81       	ldd	r25, Z+2	; 0x02
 2ae:	89 2b       	or	r24, r25
 2b0:	82 83       	std	Z+2, r24	; 0x02
 2b2:	08 95       	ret
 2b4:	96 2f       	mov	r25, r22
 2b6:	96 95       	lsr	r25
 2b8:	96 95       	lsr	r25
 2ba:	96 95       	lsr	r25
 2bc:	e8 2f       	mov	r30, r24
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	84 e5       	ldi	r24, 0x54	; 84
 2c2:	98 9f       	mul	r25, r24
 2c4:	e0 0d       	add	r30, r0
 2c6:	f1 1d       	adc	r31, r1
 2c8:	11 24       	eor	r1, r1
 2ca:	e5 5f       	subi	r30, 0xF5	; 245
 2cc:	fe 4f       	sbci	r31, 0xFE	; 254
 2ce:	67 70       	andi	r22, 0x07	; 7
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <LCD_Nokia_PutPixel+0x5c>
 2d6:	88 0f       	add	r24, r24
 2d8:	99 1f       	adc	r25, r25
 2da:	6a 95       	dec	r22
 2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <LCD_Nokia_PutPixel+0x58>
 2de:	80 95       	com	r24
 2e0:	92 81       	ldd	r25, Z+2	; 0x02
 2e2:	89 23       	and	r24, r25
 2e4:	82 83       	std	Z+2, r24	; 0x02
 2e6:	08 95       	ret

000002e8 <LCD_Nokia_Put12Char>:
 2e8:	bf 92       	push	r11
 2ea:	cf 92       	push	r12
 2ec:	df 92       	push	r13
 2ee:	ef 92       	push	r14
 2f0:	ff 92       	push	r15
 2f2:	0f 93       	push	r16
 2f4:	1f 93       	push	r17
 2f6:	cf 93       	push	r28
 2f8:	df 93       	push	r29
 2fa:	08 2e       	mov	r0, r24
 2fc:	00 0c       	add	r0, r0
 2fe:	99 0b       	sbc	r25, r25
 300:	6c 01       	movw	r12, r24
 302:	cc 0c       	add	r12, r12
 304:	dd 1c       	adc	r13, r13
 306:	8c 0d       	add	r24, r12
 308:	9d 1d       	adc	r25, r13
 30a:	88 0f       	add	r24, r24
 30c:	99 1f       	adc	r25, r25
 30e:	88 0f       	add	r24, r24
 310:	99 1f       	adc	r25, r25
 312:	88 0f       	add	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	9c 01       	movw	r18, r24
 318:	24 5c       	subi	r18, 0xC4	; 196
 31a:	33 40       	sbci	r19, 0x03	; 3
 31c:	69 01       	movw	r12, r18
 31e:	68 94       	set
 320:	bb 24       	eor	r11, r11
 322:	b1 f8       	bld	r11, 1
 324:	0b e0       	ldi	r16, 0x0B	; 11
 326:	11 e0       	ldi	r17, 0x01	; 1
 328:	f8 01       	movw	r30, r16
 32a:	80 81       	ld	r24, Z
 32c:	88 34       	cpi	r24, 0x48	; 72
 32e:	08 f0       	brcs	.+2      	; 0x332 <LCD_Nokia_Put12Char+0x4a>
 330:	57 c0       	rjmp	.+174    	; 0x3e0 <LCD_Nokia_Put12Char+0xf8>
 332:	91 81       	ldd	r25, Z+1	; 0x01
 334:	90 31       	cpi	r25, 0x10	; 16
 336:	08 f4       	brcc	.+2      	; 0x33a <LCD_Nokia_Put12Char+0x52>
 338:	53 c0       	rjmp	.+166    	; 0x3e0 <LCD_Nokia_Put12Char+0xf8>
 33a:	84 5f       	subi	r24, 0xF4	; 244
 33c:	80 83       	st	Z, r24
 33e:	90 51       	subi	r25, 0x10	; 16
 340:	91 83       	std	Z+1, r25	; 0x01
 342:	4e c0       	rjmp	.+156    	; 0x3e0 <LCD_Nokia_Put12Char+0xf8>
 344:	f7 01       	movw	r30, r14
 346:	84 91       	lpm	r24, Z
 348:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
 34c:	c0 e0       	ldi	r28, 0x00	; 0
 34e:	d0 e0       	ldi	r29, 0x00	; 0
 350:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	0c 2e       	mov	r0, r28
 358:	02 c0       	rjmp	.+4      	; 0x35e <LCD_Nokia_Put12Char+0x76>
 35a:	95 95       	asr	r25
 35c:	87 95       	ror	r24
 35e:	0a 94       	dec	r0
 360:	e2 f7       	brpl	.-8      	; 0x35a <LCD_Nokia_Put12Char+0x72>
 362:	80 ff       	sbrs	r24, 0
 364:	0a c0       	rjmp	.+20     	; 0x37a <LCD_Nokia_Put12Char+0x92>
 366:	f8 01       	movw	r30, r16
 368:	61 81       	ldd	r22, Z+1	; 0x01
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	86 0f       	add	r24, r22
 36e:	81 83       	std	Z+1, r24	; 0x01
 370:	41 e0       	ldi	r20, 0x01	; 1
 372:	80 81       	ld	r24, Z
 374:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_Nokia_PutPixel>
 378:	09 c0       	rjmp	.+18     	; 0x38c <LCD_Nokia_Put12Char+0xa4>
 37a:	f8 01       	movw	r30, r16
 37c:	61 81       	ldd	r22, Z+1	; 0x01
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	86 0f       	add	r24, r22
 382:	81 83       	std	Z+1, r24	; 0x01
 384:	40 e0       	ldi	r20, 0x00	; 0
 386:	80 81       	ld	r24, Z
 388:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_Nokia_PutPixel>
 38c:	21 96       	adiw	r28, 0x01	; 1
 38e:	c8 30       	cpi	r28, 0x08	; 8
 390:	d1 05       	cpc	r29, r1
 392:	f1 f6       	brne	.-68     	; 0x350 <LCD_Nokia_Put12Char+0x68>
 394:	f8 01       	movw	r30, r16
 396:	80 81       	ld	r24, Z
 398:	91 e0       	ldi	r25, 0x01	; 1
 39a:	98 0f       	add	r25, r24
 39c:	90 83       	st	Z, r25
 39e:	91 81       	ldd	r25, Z+1	; 0x01
 3a0:	28 ef       	ldi	r18, 0xF8	; 248
 3a2:	29 0f       	add	r18, r25
 3a4:	21 83       	std	Z+1, r18	; 0x01
 3a6:	ff ef       	ldi	r31, 0xFF	; 255
 3a8:	ef 1a       	sub	r14, r31
 3aa:	ff 0a       	sbc	r15, r31
 3ac:	ce 14       	cp	r12, r14
 3ae:	df 04       	cpc	r13, r15
 3b0:	49 f6       	brne	.-110    	; 0x344 <LCD_Nokia_Put12Char+0x5c>
 3b2:	8b 50       	subi	r24, 0x0B	; 11
 3b4:	f8 01       	movw	r30, r16
 3b6:	80 83       	st	Z, r24
 3b8:	91 83       	std	Z+1, r25	; 0x01
 3ba:	ba 94       	dec	r11
 3bc:	fc e0       	ldi	r31, 0x0C	; 12
 3be:	cf 0e       	add	r12, r31
 3c0:	d1 1c       	adc	r13, r1
 3c2:	b1 10       	cpse	r11, r1
 3c4:	b1 cf       	rjmp	.-158    	; 0x328 <LCD_Nokia_Put12Char+0x40>
 3c6:	84 35       	cpi	r24, 0x54	; 84
 3c8:	80 f0       	brcs	.+32     	; 0x3ea <LCD_Nokia_Put12Char+0x102>
 3ca:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <nokiaDisplayPixels>
 3ce:	90 5f       	subi	r25, 0xF0	; 240
 3d0:	90 33       	cpi	r25, 0x30	; 48
 3d2:	18 f4       	brcc	.+6      	; 0x3da <LCD_Nokia_Put12Char+0xf2>
 3d4:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <nokiaDisplayPixels+0x1>
 3d8:	08 c0       	rjmp	.+16     	; 0x3ea <LCD_Nokia_Put12Char+0x102>
 3da:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <nokiaDisplayPixels+0x1>
 3de:	05 c0       	rjmp	.+10     	; 0x3ea <LCD_Nokia_Put12Char+0x102>
 3e0:	76 01       	movw	r14, r12
 3e2:	2c e0       	ldi	r18, 0x0C	; 12
 3e4:	e2 1a       	sub	r14, r18
 3e6:	f1 08       	sbc	r15, r1
 3e8:	ad cf       	rjmp	.-166    	; 0x344 <LCD_Nokia_Put12Char+0x5c>
 3ea:	df 91       	pop	r29
 3ec:	cf 91       	pop	r28
 3ee:	1f 91       	pop	r17
 3f0:	0f 91       	pop	r16
 3f2:	ff 90       	pop	r15
 3f4:	ef 90       	pop	r14
 3f6:	df 90       	pop	r13
 3f8:	cf 90       	pop	r12
 3fa:	bf 90       	pop	r11
 3fc:	08 95       	ret

000003fe <LCD_Nokia_Send12CharString>:
 3fe:	cf 93       	push	r28
 400:	df 93       	push	r29
 402:	ec 01       	movw	r28, r24
 404:	88 81       	ld	r24, Y
 406:	88 23       	and	r24, r24
 408:	31 f0       	breq	.+12     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 40a:	21 96       	adiw	r28, 0x01	; 1
 40c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <LCD_Nokia_Put12Char>
 410:	89 91       	ld	r24, Y+
 412:	81 11       	cpse	r24, r1
 414:	fb cf       	rjmp	.-10     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 416:	df 91       	pop	r29
 418:	cf 91       	pop	r28
 41a:	08 95       	ret

0000041c <LCD_Nokia_UpdateFullScreen>:
// 		}
// 	}
// }

void LCD_Nokia_UpdateFullScreen (void)
{
 41c:	0f 93       	push	r16
 41e:	1f 93       	push	r17
 420:	cf 93       	push	r28
 422:	df 93       	push	r29
	LCD_Nokia_SetPosition(0, 0);
 424:	60 e0       	ldi	r22, 0x00	; 0
 426:	80 e0       	ldi	r24, 0x00	; 0
 428:	0e 94 32 01 	call	0x264	; 0x264 <LCD_Nokia_SetPosition>
 42c:	cd e0       	ldi	r28, 0x0D	; 13
 42e:	d1 e0       	ldi	r29, 0x01	; 1
 430:	05 e0       	ldi	r16, 0x05	; 5
 432:	13 e0       	ldi	r17, 0x03	; 3
	for (uint16_t i = 0; i < LCD_NOKIA_BUFFER_SIZE; i++)	LCD_Nokia_PutDataByte(nokiaDisplayPixels.screen[i]);
 434:	89 91       	ld	r24, Y+
 436:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_Nokia_PutDataByte>
 43a:	c0 17       	cp	r28, r16
 43c:	d1 07       	cpc	r29, r17
 43e:	d1 f7       	brne	.-12     	; 0x434 <LCD_Nokia_UpdateFullScreen+0x18>
}
 440:	df 91       	pop	r29
 442:	cf 91       	pop	r28
 444:	1f 91       	pop	r17
 446:	0f 91       	pop	r16
 448:	08 95       	ret

0000044a <setup>:
}

void setup (void)
{
	IO_Init();
	SPI_Master_Init();
 44a:	0e 94 3d 02 	call	0x47a	; 0x47a <SPI_Master_Init>
	LCD_Nokia_Init();
 44e:	0e 94 16 01 	call	0x22c	; 0x22c <LCD_Nokia_Init>
	
	sei();
 452:	78 94       	sei
 454:	08 95       	ret

00000456 <main>:
}

int main (void)
{
	setup();
 456:	0e 94 25 02 	call	0x44a	; 0x44a <setup>
	
	//LCD_Nokia_SetPixelPosition(52, 32);
	//LCD_Nokia_SendCharString((int8_t* ) "Hello, Ruslan!! Let's GO!");
	LCD_Nokia_Send12CharString((int8_t* ) "12.43162");
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	91 e0       	ldi	r25, 0x01	; 1
 45e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCD_Nokia_Send12CharString>
	//LCD_Nokia_SendImage(SparkfunLogo);
//	LCD_Nokia_UpdateScreen(23, 4, 75, 5);
	
	//LCD_Nokia_DrawUnfilledRectangle(43, 40, 27, 10);
	LCD_Nokia_UpdateFullScreen();
 462:	0e 94 0e 02 	call	0x41c	; 0x41c <LCD_Nokia_UpdateFullScreen>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 466:	2f ef       	ldi	r18, 0xFF	; 255
 468:	89 e6       	ldi	r24, 0x69	; 105
 46a:	98 e1       	ldi	r25, 0x18	; 24
 46c:	21 50       	subi	r18, 0x01	; 1
 46e:	80 40       	sbci	r24, 0x00	; 0
 470:	90 40       	sbci	r25, 0x00	; 0
 472:	e1 f7       	brne	.-8      	; 0x46c <main+0x16>
 474:	00 c0       	rjmp	.+0      	; 0x476 <main+0x20>
 476:	00 00       	nop
 478:	ff cf       	rjmp	.-2      	; 0x478 <main+0x22>

0000047a <SPI_Master_Init>:
	SPCR |= (1 << SPIE);														//	Activate SPI interrupt
 	volatile uint8_t temp = SPSR;												//	Clear the interrupt flag
 	temp = SPDR;																//	Clear the interrupt flag
	temp = 0x00;																//	Here assign any "garbage" value to temp
	SPDR = temp;																//	and put it in the SPDR to activate the transfer process
}
 47a:	cf 93       	push	r28
 47c:	df 93       	push	r29
 47e:	1f 92       	push	r1
 480:	cd b7       	in	r28, 0x3d	; 61
 482:	de b7       	in	r29, 0x3e	; 62
 484:	84 b1       	in	r24, 0x04	; 4
 486:	8c 62       	ori	r24, 0x2C	; 44
 488:	84 b9       	out	0x04, r24	; 4
 48a:	24 98       	cbi	0x04, 4	; 4
 48c:	8c b5       	in	r24, 0x2c	; 44
 48e:	81 65       	ori	r24, 0x51	; 81
 490:	8c bd       	out	0x2c, r24	; 44
 492:	8d b5       	in	r24, 0x2d	; 45
 494:	89 83       	std	Y+1, r24	; 0x01
 496:	8e b5       	in	r24, 0x2e	; 46
 498:	89 83       	std	Y+1, r24	; 0x01
 49a:	0f 90       	pop	r0
 49c:	df 91       	pop	r29
 49e:	cf 91       	pop	r28
 4a0:	08 95       	ret

000004a2 <SPI_PutByte>:
 4a2:	8e bd       	out	0x2e, r24	; 46
 4a4:	0d b4       	in	r0, 0x2d	; 45
 4a6:	07 fe       	sbrs	r0, 7
 4a8:	fd cf       	rjmp	.-6      	; 0x4a4 <SPI_PutByte+0x2>
 4aa:	08 95       	ret

000004ac <__vector_17>:

ISR (SPI_STC_vect)
{
 4ac:	1f 92       	push	r1
 4ae:	0f 92       	push	r0
 4b0:	0f b6       	in	r0, 0x3f	; 63
 4b2:	0f 92       	push	r0
 4b4:	11 24       	eor	r1, r1
 4b6:	8f 93       	push	r24
 4b8:	ef 93       	push	r30
 4ba:	ff 93       	push	r31
//	SPI_ReceiveBuffer[SPI_CharacterCounter] = SPDR;								//	Receive byte from the Slave	(for full-duplex communication)
	if (SPI_TransmitBuffer[SPI_CharacterCounter] != 0)							//	If not end of data
 4bc:	e0 91 0d 01 	lds	r30, 0x010D	; 0x80010d <SPI_CharacterCounter>
 4c0:	f0 e0       	ldi	r31, 0x00	; 0
 4c2:	e2 5b       	subi	r30, 0xB2	; 178
 4c4:	fe 4f       	sbci	r31, 0xFE	; 254
 4c6:	80 81       	ld	r24, Z
 4c8:	88 23       	and	r24, r24
 4ca:	61 f0       	breq	.+24     	; 0x4e4 <__vector_17+0x38>
	{
		SPDR = SPI_TransmitBuffer[SPI_CharacterCounter++];						//	Put the next byte in the SPI data register
 4cc:	e0 91 0d 01 	lds	r30, 0x010D	; 0x80010d <SPI_CharacterCounter>
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	8e 0f       	add	r24, r30
 4d4:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <SPI_CharacterCounter>
 4d8:	f0 e0       	ldi	r31, 0x00	; 0
 4da:	e2 5b       	subi	r30, 0xB2	; 178
 4dc:	fe 4f       	sbci	r31, 0xFE	; 254
 4de:	80 81       	ld	r24, Z
 4e0:	8e bd       	out	0x2e, r24	; 46
 4e2:	08 c0       	rjmp	.+16     	; 0x4f4 <__vector_17+0x48>
	}
	else
	{
		SPCR &= ~(1 << SPIE);													//	Disable SPI interrupt
 4e4:	8c b5       	in	r24, 0x2c	; 44
 4e6:	8f 77       	andi	r24, 0x7F	; 127
 4e8:	8c bd       	out	0x2c, r24	; 44
		SPI_TransmitSuccess = true;												//	Set the success flag
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <SPI_TransmitSuccess>
		SPI_CharacterCounter = 0;												//	Reset character counter
 4f0:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <SPI_CharacterCounter>
	}
}
 4f4:	ff 91       	pop	r31
 4f6:	ef 91       	pop	r30
 4f8:	8f 91       	pop	r24
 4fa:	0f 90       	pop	r0
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	0f 90       	pop	r0
 500:	1f 90       	pop	r1
 502:	18 95       	reti

00000504 <_exit>:
 504:	f8 94       	cli

00000506 <__stop_program>:
 506:	ff cf       	rjmp	.-2      	; 0x506 <__stop_program>
