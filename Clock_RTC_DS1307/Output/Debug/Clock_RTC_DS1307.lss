
Clock_RTC_DS1307.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000cf4  00000d88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cf4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a6  00800112  00800112  00000d9a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d9a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000dcc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  00000e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004403  00000000  00000000  0000109c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000135d  00000000  00000000  0000549f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000141a  00000000  00000000  000067fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000690  00000000  00000000  00007c18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ceb  00000000  00000000  000082a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000016f4  00000000  00000000  00008f93  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002a0  00000000  00000000  0000a687  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__ctors_end>
   4:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
   8:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
   c:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  10:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  14:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  18:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  1c:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  20:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  24:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  28:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  2c:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  30:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  34:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  38:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  3c:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  40:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  44:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__vector_17>
  48:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  4c:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  50:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  54:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  58:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  5c:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  60:	0c 94 a3 02 	jmp	0x546	; 0x546 <__vector_24>
  64:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  68:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  6c:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  70:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  74:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  78:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  7c:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  80:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  84:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  88:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  8c:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  90:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  94:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  98:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  9c:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  a0:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  a4:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  a8:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  ac:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>
  b0:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__bad_interrupt>

000000b4 <__trampolines_end>:
  b4:	00 00       	nop
  b6:	00 00       	nop
  b8:	00 00       	nop
  ba:	00 5f       	subi	r16, 0xF0	; 240
  bc:	00 00       	nop
  be:	00 07       	cpc	r16, r16
  c0:	00 07       	cpc	r16, r16
  c2:	00 14       	cp	r0, r0
  c4:	7f 14       	cp	r7, r15
  c6:	7f 14       	cp	r7, r15
  c8:	24 2a       	or	r2, r20
  ca:	7f 2a       	or	r7, r31
  cc:	12 23       	and	r17, r18
  ce:	13 08       	sbc	r1, r3
  d0:	64 62       	ori	r22, 0x24	; 36
  d2:	36 49       	sbci	r19, 0x96	; 150
  d4:	55 22       	and	r5, r21
  d6:	50 00       	.word	0x0050	; ????
  d8:	05 03       	mulsu	r16, r21
  da:	00 00       	nop
  dc:	00 1c       	adc	r0, r0
  de:	22 41       	sbci	r18, 0x12	; 18
  e0:	00 00       	nop
  e2:	41 22       	and	r4, r17
  e4:	1c 00       	.word	0x001c	; ????
  e6:	14 08       	sbc	r1, r4
  e8:	3e 08       	sbc	r3, r14
  ea:	14 08       	sbc	r1, r4
  ec:	08 3e       	cpi	r16, 0xE8	; 232
  ee:	08 08       	sbc	r0, r8
  f0:	00 50       	subi	r16, 0x00	; 0
  f2:	30 00       	.word	0x0030	; ????
  f4:	00 08       	sbc	r0, r0
  f6:	08 08       	sbc	r0, r8
  f8:	08 08       	sbc	r0, r8
  fa:	00 60       	ori	r16, 0x00	; 0
  fc:	60 00       	.word	0x0060	; ????
  fe:	00 20       	and	r0, r0
 100:	10 08       	sbc	r1, r0
 102:	04 02       	muls	r16, r20
 104:	3e 51       	subi	r19, 0x1E	; 30
 106:	49 45       	sbci	r20, 0x59	; 89
 108:	3e 00       	.word	0x003e	; ????
 10a:	42 7f       	andi	r20, 0xF2	; 242
 10c:	40 00       	.word	0x0040	; ????
 10e:	42 61       	ori	r20, 0x12	; 18
 110:	51 49       	sbci	r21, 0x91	; 145
 112:	46 21       	and	r20, r6
 114:	41 45       	sbci	r20, 0x51	; 81
 116:	4b 31       	cpi	r20, 0x1B	; 27
 118:	18 14       	cp	r1, r8
 11a:	12 7f       	andi	r17, 0xF2	; 242
 11c:	10 27       	eor	r17, r16
 11e:	45 45       	sbci	r20, 0x55	; 85
 120:	45 39       	cpi	r20, 0x95	; 149
 122:	3c 4a       	sbci	r19, 0xAC	; 172
 124:	49 49       	sbci	r20, 0x99	; 153
 126:	30 01       	movw	r6, r0
 128:	71 09       	sbc	r23, r1
 12a:	05 03       	mulsu	r16, r21
 12c:	36 49       	sbci	r19, 0x96	; 150
 12e:	49 49       	sbci	r20, 0x99	; 153
 130:	36 06       	cpc	r3, r22
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	29 1e       	adc	r2, r25
 136:	00 36       	cpi	r16, 0x60	; 96
 138:	36 00       	.word	0x0036	; ????
 13a:	00 00       	nop
 13c:	56 36       	cpi	r21, 0x66	; 102
 13e:	00 00       	nop
 140:	08 14       	cp	r0, r8
 142:	22 41       	sbci	r18, 0x12	; 18
 144:	00 14       	cp	r0, r0
 146:	14 14       	cp	r1, r4
 148:	14 14       	cp	r1, r4
 14a:	00 41       	sbci	r16, 0x10	; 16
 14c:	22 14       	cp	r2, r2
 14e:	08 02       	muls	r16, r24
 150:	01 51       	subi	r16, 0x11	; 17
 152:	09 06       	cpc	r0, r25
 154:	32 49       	sbci	r19, 0x92	; 146
 156:	79 41       	sbci	r23, 0x19	; 25
 158:	3e 7e       	andi	r19, 0xEE	; 238
 15a:	11 11       	cpse	r17, r1
 15c:	11 7e       	andi	r17, 0xE1	; 225
 15e:	7f 49       	sbci	r23, 0x9F	; 159
 160:	49 49       	sbci	r20, 0x99	; 153
 162:	36 3e       	cpi	r19, 0xE6	; 230
 164:	41 41       	sbci	r20, 0x11	; 17
 166:	41 22       	and	r4, r17
 168:	7f 41       	sbci	r23, 0x1F	; 31
 16a:	41 22       	and	r4, r17
 16c:	1c 7f       	andi	r17, 0xFC	; 252
 16e:	49 49       	sbci	r20, 0x99	; 153
 170:	49 41       	sbci	r20, 0x19	; 25
 172:	7f 09       	sbc	r23, r15
 174:	09 09       	sbc	r16, r9
 176:	01 3e       	cpi	r16, 0xE1	; 225
 178:	41 49       	sbci	r20, 0x91	; 145
 17a:	49 7a       	andi	r20, 0xA9	; 169
 17c:	7f 08       	sbc	r7, r15
 17e:	08 08       	sbc	r0, r8
 180:	7f 00       	.word	0x007f	; ????
 182:	41 7f       	andi	r20, 0xF1	; 241
 184:	41 00       	.word	0x0041	; ????
 186:	20 40       	sbci	r18, 0x00	; 0
 188:	41 3f       	cpi	r20, 0xF1	; 241
 18a:	01 7f       	andi	r16, 0xF1	; 241
 18c:	08 14       	cp	r0, r8
 18e:	22 41       	sbci	r18, 0x12	; 18
 190:	7f 40       	sbci	r23, 0x0F	; 15
 192:	40 40       	sbci	r20, 0x00	; 0
 194:	40 7f       	andi	r20, 0xF0	; 240
 196:	02 0c       	add	r0, r2
 198:	02 7f       	andi	r16, 0xF2	; 242
 19a:	7f 04       	cpc	r7, r15
 19c:	08 10       	cpse	r0, r8
 19e:	7f 3e       	cpi	r23, 0xEF	; 239
 1a0:	41 41       	sbci	r20, 0x11	; 17
 1a2:	41 3e       	cpi	r20, 0xE1	; 225
 1a4:	7f 09       	sbc	r23, r15
 1a6:	09 09       	sbc	r16, r9
 1a8:	06 3e       	cpi	r16, 0xE6	; 230
 1aa:	41 51       	subi	r20, 0x11	; 17
 1ac:	21 5e       	subi	r18, 0xE1	; 225
 1ae:	7f 09       	sbc	r23, r15
 1b0:	19 29       	or	r17, r9
 1b2:	46 46       	sbci	r20, 0x66	; 102
 1b4:	49 49       	sbci	r20, 0x99	; 153
 1b6:	49 31       	cpi	r20, 0x19	; 25
 1b8:	01 01       	movw	r0, r2
 1ba:	7f 01       	movw	r14, r30
 1bc:	01 3f       	cpi	r16, 0xF1	; 241
 1be:	40 40       	sbci	r20, 0x00	; 0
 1c0:	40 3f       	cpi	r20, 0xF0	; 240
 1c2:	1f 20       	and	r1, r15
 1c4:	40 20       	and	r4, r0
 1c6:	1f 3f       	cpi	r17, 0xFF	; 255
 1c8:	40 38       	cpi	r20, 0x80	; 128
 1ca:	40 3f       	cpi	r20, 0xF0	; 240
 1cc:	63 14       	cp	r6, r3
 1ce:	08 14       	cp	r0, r8
 1d0:	63 07       	cpc	r22, r19
 1d2:	08 70       	andi	r16, 0x08	; 8
 1d4:	08 07       	cpc	r16, r24
 1d6:	61 51       	subi	r22, 0x11	; 17
 1d8:	49 45       	sbci	r20, 0x59	; 89
 1da:	43 00       	.word	0x0043	; ????
 1dc:	7f 41       	sbci	r23, 0x1F	; 31
 1de:	41 00       	.word	0x0041	; ????
 1e0:	02 04       	cpc	r0, r2
 1e2:	08 10       	cpse	r0, r8
 1e4:	20 00       	.word	0x0020	; ????
 1e6:	41 41       	sbci	r20, 0x11	; 17
 1e8:	7f 00       	.word	0x007f	; ????
 1ea:	04 02       	muls	r16, r20
 1ec:	01 02       	muls	r16, r17
 1ee:	04 40       	sbci	r16, 0x04	; 4
 1f0:	40 40       	sbci	r20, 0x00	; 0
 1f2:	40 40       	sbci	r20, 0x00	; 0
 1f4:	00 01       	movw	r0, r0
 1f6:	02 04       	cpc	r0, r2
 1f8:	00 20       	and	r0, r0
 1fa:	54 54       	subi	r21, 0x44	; 68
 1fc:	54 78       	andi	r21, 0x84	; 132
 1fe:	7f 48       	sbci	r23, 0x8F	; 143
 200:	44 44       	sbci	r20, 0x44	; 68
 202:	38 38       	cpi	r19, 0x88	; 136
 204:	44 44       	sbci	r20, 0x44	; 68
 206:	44 20       	and	r4, r4
 208:	38 44       	sbci	r19, 0x48	; 72
 20a:	44 48       	sbci	r20, 0x84	; 132
 20c:	7f 38       	cpi	r23, 0x8F	; 143
 20e:	54 54       	subi	r21, 0x44	; 68
 210:	54 18       	sub	r5, r4
 212:	08 7e       	andi	r16, 0xE8	; 232
 214:	09 01       	movw	r0, r18
 216:	02 0c       	add	r0, r2
 218:	52 52       	subi	r21, 0x22	; 34
 21a:	52 3e       	cpi	r21, 0xE2	; 226
 21c:	7f 08       	sbc	r7, r15
 21e:	04 04       	cpc	r0, r4
 220:	78 00       	.word	0x0078	; ????
 222:	44 7d       	andi	r20, 0xD4	; 212
 224:	40 00       	.word	0x0040	; ????
 226:	20 40       	sbci	r18, 0x00	; 0
 228:	44 3d       	cpi	r20, 0xD4	; 212
 22a:	00 7f       	andi	r16, 0xF0	; 240
 22c:	10 28       	or	r1, r0
 22e:	44 00       	.word	0x0044	; ????
 230:	00 41       	sbci	r16, 0x10	; 16
 232:	7f 40       	sbci	r23, 0x0F	; 15
 234:	00 7c       	andi	r16, 0xC0	; 192
 236:	04 18       	sub	r0, r4
 238:	04 78       	andi	r16, 0x84	; 132
 23a:	7c 08       	sbc	r7, r12
 23c:	04 04       	cpc	r0, r4
 23e:	78 38       	cpi	r23, 0x88	; 136
 240:	44 44       	sbci	r20, 0x44	; 68
 242:	44 38       	cpi	r20, 0x84	; 132
 244:	7c 14       	cp	r7, r12
 246:	14 14       	cp	r1, r4
 248:	08 08       	sbc	r0, r8
 24a:	14 14       	cp	r1, r4
 24c:	18 7c       	andi	r17, 0xC8	; 200
 24e:	7c 08       	sbc	r7, r12
 250:	04 04       	cpc	r0, r4
 252:	08 48       	sbci	r16, 0x88	; 136
 254:	54 54       	subi	r21, 0x44	; 68
 256:	54 20       	and	r5, r4
 258:	04 3f       	cpi	r16, 0xF4	; 244
 25a:	44 40       	sbci	r20, 0x04	; 4
 25c:	20 3c       	cpi	r18, 0xC0	; 192
 25e:	40 40       	sbci	r20, 0x00	; 0
 260:	20 7c       	andi	r18, 0xC0	; 192
 262:	1c 20       	and	r1, r12
 264:	40 20       	and	r4, r0
 266:	1c 3c       	cpi	r17, 0xCC	; 204
 268:	40 30       	cpi	r20, 0x00	; 0
 26a:	40 3c       	cpi	r20, 0xC0	; 192
 26c:	44 28       	or	r4, r4
 26e:	10 28       	or	r1, r0
 270:	44 0c       	add	r4, r4
 272:	50 50       	subi	r21, 0x00	; 0
 274:	50 3c       	cpi	r21, 0xC0	; 192
 276:	44 64       	ori	r20, 0x44	; 68
 278:	54 4c       	sbci	r21, 0xC4	; 196
 27a:	44 00       	.word	0x0044	; ????
 27c:	08 36       	cpi	r16, 0x68	; 104
 27e:	41 00       	.word	0x0041	; ????
 280:	00 00       	nop
 282:	7f 00       	.word	0x007f	; ????
 284:	00 00       	nop
 286:	41 36       	cpi	r20, 0x61	; 97
 288:	08 00       	.word	0x0008	; ????
 28a:	10 08       	sbc	r1, r0
 28c:	08 10       	cpse	r0, r8
 28e:	08 78       	andi	r16, 0x88	; 136
 290:	46 41       	sbci	r20, 0x16	; 22
 292:	46 78       	andi	r20, 0x86	; 134

00000294 <__ctors_end>:
 294:	11 24       	eor	r1, r1
 296:	1f be       	out	0x3f, r1	; 63
 298:	cf ef       	ldi	r28, 0xFF	; 255
 29a:	d8 e0       	ldi	r29, 0x08	; 8
 29c:	de bf       	out	0x3e, r29	; 62
 29e:	cd bf       	out	0x3d, r28	; 61

000002a0 <__do_copy_data>:
 2a0:	11 e0       	ldi	r17, 0x01	; 1
 2a2:	a0 e0       	ldi	r26, 0x00	; 0
 2a4:	b1 e0       	ldi	r27, 0x01	; 1
 2a6:	e4 ef       	ldi	r30, 0xF4	; 244
 2a8:	fc e0       	ldi	r31, 0x0C	; 12
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <__do_copy_data+0x10>
 2ac:	05 90       	lpm	r0, Z+
 2ae:	0d 92       	st	X+, r0
 2b0:	a2 31       	cpi	r26, 0x12	; 18
 2b2:	b1 07       	cpc	r27, r17
 2b4:	d9 f7       	brne	.-10     	; 0x2ac <__do_copy_data+0xc>

000002b6 <__do_clear_bss>:
 2b6:	21 e0       	ldi	r18, 0x01	; 1
 2b8:	a2 e1       	ldi	r26, 0x12	; 18
 2ba:	b1 e0       	ldi	r27, 0x01	; 1
 2bc:	01 c0       	rjmp	.+2      	; 0x2c0 <.do_clear_bss_start>

000002be <.do_clear_bss_loop>:
 2be:	1d 92       	st	X+, r1

000002c0 <.do_clear_bss_start>:
 2c0:	a8 3b       	cpi	r26, 0xB8	; 184
 2c2:	b2 07       	cpc	r27, r18
 2c4:	e1 f7       	brne	.-8      	; 0x2be <.do_clear_bss_loop>
 2c6:	0e 94 dd 05 	call	0xbba	; 0xbba <main>
 2ca:	0c 94 78 06 	jmp	0xcf0	; 0xcf0 <_exit>

000002ce <__bad_interrupt>:
 2ce:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002d2 <BCDToBin>:
	
	DS1307_UpdateTime();
}

void DS1307_SelectWeekday (uint8_t weekday)
{
 2d2:	98 2f       	mov	r25, r24
 2d4:	92 95       	swap	r25
 2d6:	9f 70       	andi	r25, 0x0F	; 15
 2d8:	99 0f       	add	r25, r25
 2da:	29 2f       	mov	r18, r25
 2dc:	22 0f       	add	r18, r18
 2de:	22 0f       	add	r18, r18
 2e0:	92 0f       	add	r25, r18
 2e2:	8f 70       	andi	r24, 0x0F	; 15
 2e4:	89 0f       	add	r24, r25
 2e6:	08 95       	ret

000002e8 <DS1307_ReceiveData>:
 2e8:	ef 92       	push	r14
 2ea:	ff 92       	push	r15
 2ec:	1f 93       	push	r17
 2ee:	cf 93       	push	r28
 2f0:	df 93       	push	r29
 2f2:	7c 01       	movw	r14, r24
 2f4:	14 2f       	mov	r17, r20
 2f6:	c0 e0       	ldi	r28, 0x00	; 0
 2f8:	d0 e0       	ldi	r29, 0x00	; 0
 2fa:	80 ed       	ldi	r24, 0xD0	; 208
 2fc:	88 83       	st	Y, r24
 2fe:	69 83       	std	Y+1, r22	; 0x01
 300:	62 e0       	ldi	r22, 0x02	; 2
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	0e 94 62 02 	call	0x4c4	; 0x4c4 <I2C_MT_TransmitData>
 30a:	81 ed       	ldi	r24, 0xD1	; 209
 30c:	88 83       	st	Y, r24
 30e:	61 2f       	mov	r22, r17
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	0e 94 62 02 	call	0x4c4	; 0x4c4 <I2C_MT_TransmitData>
 318:	61 2f       	mov	r22, r17
 31a:	c7 01       	movw	r24, r14
 31c:	0e 94 84 02 	call	0x508	; 0x508 <I2C_MR_ReceiveData>
 320:	df 91       	pop	r29
 322:	cf 91       	pop	r28
 324:	1f 91       	pop	r17
 326:	ff 90       	pop	r15
 328:	ef 90       	pop	r14
 32a:	08 95       	ret

0000032c <DS1307_ReceiveTimeData>:
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	84 e1       	ldi	r24, 0x14	; 20
 332:	91 e0       	ldi	r25, 0x01	; 1
 334:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 338:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 33c:	48 e0       	ldi	r20, 0x08	; 8
 33e:	60 e0       	ldi	r22, 0x00	; 0
 340:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DS1307_ReceiveData>
 344:	c0 91 12 01 	lds	r28, 0x0112	; 0x800112 <__data_end>
 348:	d0 91 13 01 	lds	r29, 0x0113	; 0x800113 <__data_end+0x1>
 34c:	88 81       	ld	r24, Y
 34e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <BCDToBin>
 352:	88 83       	st	Y, r24
 354:	c0 91 12 01 	lds	r28, 0x0112	; 0x800112 <__data_end>
 358:	d0 91 13 01 	lds	r29, 0x0113	; 0x800113 <__data_end+0x1>
 35c:	89 81       	ldd	r24, Y+1	; 0x01
 35e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <BCDToBin>
 362:	89 83       	std	Y+1, r24	; 0x01
 364:	c0 91 12 01 	lds	r28, 0x0112	; 0x800112 <__data_end>
 368:	d0 91 13 01 	lds	r29, 0x0113	; 0x800113 <__data_end+0x1>
 36c:	8a 81       	ldd	r24, Y+2	; 0x02
 36e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <BCDToBin>
 372:	8a 83       	std	Y+2, r24	; 0x02
 374:	8b 81       	ldd	r24, Y+3	; 0x03
 376:	0e 94 69 01 	call	0x2d2	; 0x2d2 <BCDToBin>
 37a:	8b 83       	std	Y+3, r24	; 0x03
 37c:	8c 81       	ldd	r24, Y+4	; 0x04
 37e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <BCDToBin>
 382:	8c 83       	std	Y+4, r24	; 0x04
 384:	8d 81       	ldd	r24, Y+5	; 0x05
 386:	0e 94 69 01 	call	0x2d2	; 0x2d2 <BCDToBin>
 38a:	8d 83       	std	Y+5, r24	; 0x05
 38c:	8e 81       	ldd	r24, Y+6	; 0x06
 38e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <BCDToBin>
 392:	8e 83       	std	Y+6, r24	; 0x06
 394:	df 91       	pop	r29
 396:	cf 91       	pop	r28
 398:	08 95       	ret

0000039a <DS1307_LCD_Nokia_OutTime>:



void DS1307_LCD_Nokia_OutTime (void)
{
	DS1307_ReceiveTimeData();
 39a:	0e 94 96 01 	call	0x32c	; 0x32c <DS1307_ReceiveTimeData>
	LCD_Nokia_SetPixelPosition(12, 8);
 39e:	68 e0       	ldi	r22, 0x08	; 8
 3a0:	8c e0       	ldi	r24, 0x0C	; 12
 3a2:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_Nokia_SetPixelPosition>
	LCD_Nokia_Send5CharString((int8_t* ) "Time: ");
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	0e 94 28 04 	call	0x850	; 0x850 <LCD_Nokia_Send5CharString>
	LCD_Nokia_Send5Integer(TimeRegPointer->hours);
 3ae:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__data_end>
 3b2:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__data_end+0x1>
 3b6:	62 81       	ldd	r22, Z+2	; 0x02
 3b8:	70 e0       	ldi	r23, 0x00	; 0
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Nokia_Send5Integer>
	LCD_Nokia_Put5Char(':');
 3c2:	8a e3       	ldi	r24, 0x3A	; 58
 3c4:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
	LCD_Nokia_Send5Integer(TimeRegPointer->minutes);
 3c8:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__data_end>
 3cc:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__data_end+0x1>
 3d0:	61 81       	ldd	r22, Z+1	; 0x01
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Nokia_Send5Integer>
	LCD_Nokia_SetPixelPosition(12, 16);
 3dc:	60 e1       	ldi	r22, 0x10	; 16
 3de:	8c e0       	ldi	r24, 0x0C	; 12
 3e0:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_Nokia_SetPixelPosition>
	LCD_Nokia_Send5CharString((int8_t* ) "Date: ");
 3e4:	88 e0       	ldi	r24, 0x08	; 8
 3e6:	91 e0       	ldi	r25, 0x01	; 1
 3e8:	0e 94 28 04 	call	0x850	; 0x850 <LCD_Nokia_Send5CharString>
	LCD_Nokia_Send5Integer(TimeRegPointer->month);
 3ec:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__data_end>
 3f0:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__data_end+0x1>
 3f4:	65 81       	ldd	r22, Z+5	; 0x05
 3f6:	70 e0       	ldi	r23, 0x00	; 0
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Nokia_Send5Integer>
	LCD_Nokia_Put5Char('.');
 400:	8e e2       	ldi	r24, 0x2E	; 46
 402:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
	LCD_Nokia_Send5Integer(TimeRegPointer->date);
 406:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__data_end>
 40a:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__data_end+0x1>
 40e:	64 81       	ldd	r22, Z+4	; 0x04
 410:	70 e0       	ldi	r23, 0x00	; 0
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Nokia_Send5Integer>
	LCD_Nokia_Put5Char('.');
 41a:	8e e2       	ldi	r24, 0x2E	; 46
 41c:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
	LCD_Nokia_Send5Integer(TimeRegPointer->year);
 420:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__data_end>
 424:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__data_end+0x1>
 428:	66 81       	ldd	r22, Z+6	; 0x06
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Nokia_Send5Integer>
	LCD_Nokia_SetPixelPosition(12, 24);
 434:	68 e1       	ldi	r22, 0x18	; 24
 436:	8c e0       	ldi	r24, 0x0C	; 12
 438:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_Nokia_SetPixelPosition>
	LCD_Nokia_Send5Integer(TimeRegPointer->weekday);
 43c:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__data_end>
 440:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__data_end+0x1>
 444:	63 81       	ldd	r22, Z+3	; 0x03
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	80 e0       	ldi	r24, 0x00	; 0
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Nokia_Send5Integer>
	LCD_Nokia_UpdateFullScreen();
 450:	0e 94 b9 05 	call	0xb72	; 0xb72 <LCD_Nokia_UpdateFullScreen>
 454:	08 95       	ret

00000456 <I2C_IO_Init>:
		timeStructPointer->month = I2C_ReceiveBuffer[6];
		timeStructPointer->year = I2C_ReceiveBuffer[7];
	}
	
	return (I2C_StatusFlags.transfer);
}
 456:	87 b1       	in	r24, 0x07	; 7
 458:	8f 7c       	andi	r24, 0xCF	; 207
 45a:	87 b9       	out	0x07, r24	; 7
 45c:	88 b1       	in	r24, 0x08	; 8
 45e:	80 63       	ori	r24, 0x30	; 48
 460:	88 b9       	out	0x08, r24	; 8
 462:	08 95       	ret

00000464 <I2C_Init>:
 464:	cf 92       	push	r12
 466:	df 92       	push	r13
 468:	ef 92       	push	r14
 46a:	ff 92       	push	r15
 46c:	cf 93       	push	r28
 46e:	6b 01       	movw	r12, r22
 470:	7c 01       	movw	r14, r24
 472:	c4 2f       	mov	r28, r20
 474:	0e 94 2b 02 	call	0x456	; 0x456 <I2C_IO_Init>
 478:	60 e4       	ldi	r22, 0x40	; 64
 47a:	72 e4       	ldi	r23, 0x42	; 66
 47c:	8f e0       	ldi	r24, 0x0F	; 15
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	a7 01       	movw	r20, r14
 482:	96 01       	movw	r18, r12
 484:	0e 94 37 06 	call	0xc6e	; 0xc6e <__udivmodsi4>
 488:	ca 01       	movw	r24, r20
 48a:	b9 01       	movw	r22, r18
 48c:	60 51       	subi	r22, 0x10	; 16
 48e:	71 09       	sbc	r23, r1
 490:	81 09       	sbc	r24, r1
 492:	91 09       	sbc	r25, r1
 494:	4c 2f       	mov	r20, r28
 496:	50 e0       	ldi	r21, 0x00	; 0
 498:	9a 01       	movw	r18, r20
 49a:	22 0f       	add	r18, r18
 49c:	33 1f       	adc	r19, r19
 49e:	03 2e       	mov	r0, r19
 4a0:	00 0c       	add	r0, r0
 4a2:	44 0b       	sbc	r20, r20
 4a4:	55 0b       	sbc	r21, r21
 4a6:	0e 94 37 06 	call	0xc6e	; 0xc6e <__udivmodsi4>
 4aa:	20 93 b8 00 	sts	0x00B8, r18	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 4ae:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 4b2:	84 e0       	ldi	r24, 0x04	; 4
 4b4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 4b8:	cf 91       	pop	r28
 4ba:	ff 90       	pop	r15
 4bc:	ef 90       	pop	r14
 4be:	df 90       	pop	r13
 4c0:	cf 90       	pop	r12
 4c2:	08 95       	ret

000004c4 <I2C_MT_TransmitData>:
 4c4:	fc 01       	movw	r30, r24
 4c6:	ac eb       	ldi	r26, 0xBC	; 188
 4c8:	b0 e0       	ldi	r27, 0x00	; 0
 4ca:	9c 91       	ld	r25, X
 4cc:	90 fd       	sbrc	r25, 0
 4ce:	fd cf       	rjmp	.-6      	; 0x4ca <I2C_MT_TransmitData+0x6>
 4d0:	60 93 1c 01 	sts	0x011C, r22	; 0x80011c <I2C_MessageSize>
 4d4:	80 81       	ld	r24, Z
 4d6:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <I2C_TransmitBuffer>
 4da:	80 81       	ld	r24, Z
 4dc:	80 fd       	sbrc	r24, 0
 4de:	0e c0       	rjmp	.+28     	; 0x4fc <I2C_MT_TransmitData+0x38>
 4e0:	62 30       	cpi	r22, 0x02	; 2
 4e2:	60 f0       	brcs	.+24     	; 0x4fc <I2C_MT_TransmitData+0x38>
 4e4:	31 96       	adiw	r30, 0x01	; 1
 4e6:	21 e0       	ldi	r18, 0x01	; 1
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	81 91       	ld	r24, Z+
 4ec:	d9 01       	movw	r26, r18
 4ee:	a8 5d       	subi	r26, 0xD8	; 216
 4f0:	be 4f       	sbci	r27, 0xFE	; 254
 4f2:	8c 93       	st	X, r24
 4f4:	2f 5f       	subi	r18, 0xFF	; 255
 4f6:	3f 4f       	sbci	r19, 0xFF	; 255
 4f8:	26 17       	cp	r18, r22
 4fa:	b8 f3       	brcs	.-18     	; 0x4ea <I2C_MT_TransmitData+0x26>
 4fc:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <I2C_StatusFlags>
 500:	85 ea       	ldi	r24, 0xA5	; 165
 502:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 506:	08 95       	ret

00000508 <I2C_MR_ReceiveData>:
 508:	dc 01       	movw	r26, r24
 50a:	ec eb       	ldi	r30, 0xBC	; 188
 50c:	f0 e0       	ldi	r31, 0x00	; 0
 50e:	90 81       	ld	r25, Z
 510:	90 fd       	sbrc	r25, 0
 512:	fd cf       	rjmp	.-6      	; 0x50e <I2C_MR_ReceiveData+0x6>
 514:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <I2C_StatusFlags>
 518:	80 ff       	sbrs	r24, 0
 51a:	11 c0       	rjmp	.+34     	; 0x53e <I2C_MR_ReceiveData+0x36>
 51c:	66 23       	and	r22, r22
 51e:	79 f0       	breq	.+30     	; 0x53e <I2C_MR_ReceiveData+0x36>
 520:	91 e0       	ldi	r25, 0x01	; 1
 522:	29 2f       	mov	r18, r25
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	f9 01       	movw	r30, r18
 528:	e3 5e       	subi	r30, 0xE3	; 227
 52a:	fe 4f       	sbci	r31, 0xFE	; 254
 52c:	40 81       	ld	r20, Z
 52e:	2a 0f       	add	r18, r26
 530:	3b 1f       	adc	r19, r27
 532:	f9 01       	movw	r30, r18
 534:	31 97       	sbiw	r30, 0x01	; 1
 536:	40 83       	st	Z, r20
 538:	9f 5f       	subi	r25, 0xFF	; 255
 53a:	69 17       	cp	r22, r25
 53c:	90 f7       	brcc	.-28     	; 0x522 <I2C_MR_ReceiveData+0x1a>
 53e:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <I2C_StatusFlags>
 542:	81 70       	andi	r24, 0x01	; 1
 544:	08 95       	ret

00000546 <__vector_24>:

ISR (TWI0_vect)
{
 546:	1f 92       	push	r1
 548:	0f 92       	push	r0
 54a:	0f b6       	in	r0, 0x3f	; 63
 54c:	0f 92       	push	r0
 54e:	11 24       	eor	r1, r1
 550:	8f 93       	push	r24
 552:	9f 93       	push	r25
 554:	ef 93       	push	r30
 556:	ff 93       	push	r31
	static uint8_t bufferPointer;
	
	switch(TWSR0 & I2C_STATUS_MASK)
 558:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 55c:	88 7f       	andi	r24, 0xF8	; 248
 55e:	80 33       	cpi	r24, 0x30	; 48
 560:	09 f4       	brne	.+2      	; 0x564 <__vector_24+0x1e>
 562:	44 c0       	rjmp	.+136    	; 0x5ec <__vector_24+0xa6>
 564:	88 f4       	brcc	.+34     	; 0x588 <__vector_24+0x42>
 566:	80 31       	cpi	r24, 0x10	; 16
 568:	11 f1       	breq	.+68     	; 0x5ae <__vector_24+0x68>
 56a:	30 f4       	brcc	.+12     	; 0x578 <__vector_24+0x32>
 56c:	88 23       	and	r24, r24
 56e:	09 f4       	brne	.+2      	; 0x572 <__vector_24+0x2c>
 570:	6c c0       	rjmp	.+216    	; 0x64a <__vector_24+0x104>
 572:	88 30       	cpi	r24, 0x08	; 8
 574:	e1 f0       	breq	.+56     	; 0x5ae <__vector_24+0x68>
 576:	70 c0       	rjmp	.+224    	; 0x658 <__vector_24+0x112>
 578:	80 32       	cpi	r24, 0x20	; 32
 57a:	c1 f1       	breq	.+112    	; 0x5ec <__vector_24+0xa6>
 57c:	88 32       	cpi	r24, 0x28	; 40
 57e:	c9 f0       	breq	.+50     	; 0x5b2 <__vector_24+0x6c>
 580:	88 31       	cpi	r24, 0x18	; 24
 582:	09 f0       	breq	.+2      	; 0x586 <__vector_24+0x40>
 584:	69 c0       	rjmp	.+210    	; 0x658 <__vector_24+0x112>
 586:	15 c0       	rjmp	.+42     	; 0x5b2 <__vector_24+0x6c>
 588:	88 34       	cpi	r24, 0x48	; 72
 58a:	09 f4       	brne	.+2      	; 0x58e <__vector_24+0x48>
 58c:	51 c0       	rjmp	.+162    	; 0x630 <__vector_24+0xea>
 58e:	28 f4       	brcc	.+10     	; 0x59a <__vector_24+0x54>
 590:	88 33       	cpi	r24, 0x38	; 56
 592:	81 f1       	breq	.+96     	; 0x5f4 <__vector_24+0xae>
 594:	80 34       	cpi	r24, 0x40	; 64
 596:	f1 f1       	breq	.+124    	; 0x614 <__vector_24+0xce>
 598:	5f c0       	rjmp	.+190    	; 0x658 <__vector_24+0x112>
 59a:	88 35       	cpi	r24, 0x58	; 88
 59c:	09 f4       	brne	.+2      	; 0x5a0 <__vector_24+0x5a>
 59e:	4c c0       	rjmp	.+152    	; 0x638 <__vector_24+0xf2>
 5a0:	88 3f       	cpi	r24, 0xF8	; 248
 5a2:	09 f4       	brne	.+2      	; 0x5a6 <__vector_24+0x60>
 5a4:	56 c0       	rjmp	.+172    	; 0x652 <__vector_24+0x10c>
 5a6:	80 35       	cpi	r24, 0x50	; 80
 5a8:	09 f0       	breq	.+2      	; 0x5ac <__vector_24+0x66>
 5aa:	56 c0       	rjmp	.+172    	; 0x658 <__vector_24+0x112>
 5ac:	27 c0       	rjmp	.+78     	; 0x5fc <__vector_24+0xb6>
	{
		case I2C_START:
		case I2C_REPEATED_START:	bufferPointer = 0;									//	
 5ae:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <bufferPointer.2557>
		case MT_SLA_ACK:
		case MT_DATA_ACK:
		{
			if (bufferPointer < I2C_MessageSize)
 5b2:	e0 91 1b 01 	lds	r30, 0x011B	; 0x80011b <bufferPointer.2557>
 5b6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_MessageSize>
 5ba:	e8 17       	cp	r30, r24
 5bc:	70 f4       	brcc	.+28     	; 0x5da <__vector_24+0x94>
			{
				TWDR0 = I2C_TransmitBuffer[bufferPointer++];
 5be:	81 e0       	ldi	r24, 0x01	; 1
 5c0:	8e 0f       	add	r24, r30
 5c2:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <bufferPointer.2557>
 5c6:	f0 e0       	ldi	r31, 0x00	; 0
 5c8:	e8 5d       	subi	r30, 0xD8	; 216
 5ca:	fe 4f       	sbci	r31, 0xFE	; 254
 5cc:	80 81       	ld	r24, Z
 5ce:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
				TWCR0 =	(1 << TWEN) |												// 
 5d2:	85 e8       	ldi	r24, 0x85	; 133
 5d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 5d8:	3f c0       	rjmp	.+126    	; 0x658 <__vector_24+0x112>
						(0 << TWEA) | (0 << TWSTA) | (0 << TWSTO) |					// 
						(0 << TWWC);												//	Clear Write Collision flag
			}
			else
			{
				I2C_StatusFlags.transfer = I2C_SUCCESS_FLAG;
 5da:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <I2C_StatusFlags>
 5de:	81 60       	ori	r24, 0x01	; 1
 5e0:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <I2C_StatusFlags>
				TWCR0 =	(1 << TWEN) |												// 
 5e4:	84 e9       	ldi	r24, 0x94	; 148
 5e6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 5ea:	36 c0       	rjmp	.+108    	; 0x658 <__vector_24+0x112>
			(0 << TWWC);															//	Clear Write Collision flag
}

void I2C_Start (void)
{
	TWCR0 =	(1 << TWEN) |															//	Enable I2C
 5ec:	85 ea       	ldi	r24, 0xA5	; 165
 5ee:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 5f2:	32 c0       	rjmp	.+100    	; 0x658 <__vector_24+0x112>
 5f4:	85 ea       	ldi	r24, 0xA5	; 165
 5f6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 5fa:	2e c0       	rjmp	.+92     	; 0x658 <__vector_24+0x112>
			I2C_Start();
			
			break;
		}

        case MR_DATA_ACK:   I2C_ReceiveBuffer[bufferPointer++] = TWDR0;
 5fc:	e0 91 1b 01 	lds	r30, 0x011B	; 0x80011b <bufferPointer.2557>
 600:	81 e0       	ldi	r24, 0x01	; 1
 602:	8e 0f       	add	r24, r30
 604:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <bufferPointer.2557>
 608:	f0 e0       	ldi	r31, 0x00	; 0
 60a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 60e:	e3 5e       	subi	r30, 0xE3	; 227
 610:	fe 4f       	sbci	r31, 0xFE	; 254
 612:	80 83       	st	Z, r24
        case MR_SLA_ACK:
        {
            if (bufferPointer < I2C_MessageSize)
 614:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <bufferPointer.2557>
 618:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_MessageSize>
 61c:	98 17       	cp	r25, r24
 61e:	20 f4       	brcc	.+8      	; 0x628 <__vector_24+0xe2>
            {
                TWCR0 =	(1 << TWEN) |															// 
 620:	85 ec       	ldi	r24, 0xC5	; 197
 622:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 626:	18 c0       	rjmp	.+48     	; 0x658 <__vector_24+0x112>
			            (1 << TWEA) | (0 << TWSTA) | (0 << TWSTO) |								// 
			            (0 << TWWC);															//	Clear Write Collision flag
            }
            else
            {
                TWCR0 =	(1 << TWEN) |															// 
 628:	85 e8       	ldi	r24, 0x85	; 133
 62a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 62e:	14 c0       	rjmp	.+40     	; 0x658 <__vector_24+0x112>
        }
        
        case MR_SLA_NACK:
        {
	        //  Send stop/start or stop followed by a start
	        TWCR0 =	(1 << TWEN) |															//
 630:	84 e9       	ldi	r24, 0x94	; 148
 632:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
					(0 << TWIE) | (1 << TWINT) |											//
				    (0 << TWEA) | (0 << TWSTA) | (1 << TWSTO) |								//
					(0 << TWWC);															//	Clear Write Collision flag

	        break;
 636:	10 c0       	rjmp	.+32     	; 0x658 <__vector_24+0x112>
		
		case MR_DATA_NACK:
		{
			//  Send stop/start or stop followed by a start
			//I2C_ReceiveBuffer[bufferPointer++] = TWDR0;	//???????????????????
			I2C_StatusFlags.transfer = 1;
 638:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <I2C_StatusFlags>
 63c:	81 60       	ori	r24, 0x01	; 1
 63e:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <I2C_StatusFlags>
			TWCR0 =  (1 << TWEN) |													// Enable TWI-interface and release TWI pins.
 642:	84 e9       	ldi	r24, 0x94	; 148
 644:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
					(0 << TWIE) | (1 << TWINT) |									// Enable Interrupt and clear the flag.
					(0 << TWEA) | (0 << TWSTA) | (1 << TWSTO) |						// Initiate a STOP condition.
					(0 << TWWC);													//	Clear Write Collision flag
			
			break;
 648:	07 c0       	rjmp	.+14     	; 0x658 <__vector_24+0x112>
			(0 << TWWC);															//	Clear Write Collision flag
}

void I2C_Stop (void)
{
	TWCR0 =	(1 << TWEN) |															// 
 64a:	85 e9       	ldi	r24, 0x95	; 149
 64c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 650:	03 c0       	rjmp	.+6      	; 0x658 <__vector_24+0x112>
			break;
		}

		case I2C_NO_RELEVANT_STATE_INFORMATION:
		{
			TWCR0 =	(1 << TWEN) |															//
 652:	84 e0       	ldi	r24, 0x04	; 4
 654:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
			break;
		}

		default:    break;
	}
}
 658:	ff 91       	pop	r31
 65a:	ef 91       	pop	r30
 65c:	9f 91       	pop	r25
 65e:	8f 91       	pop	r24
 660:	0f 90       	pop	r0
 662:	0f be       	out	0x3f, r0	; 63
 664:	0f 90       	pop	r0
 666:	1f 90       	pop	r1
 668:	18 95       	reti

0000066a <LCD_Nokia_Reset>:
{
	LCD_Nokia_DrawRectangle(xLeft, yHigh, xRight, yLow, 1);
}

void LCD_Nokia_DrawUnfilledCircle (uint8_t xO, uint8_t yO, uint8_t radius)
{
 66a:	29 98       	cbi	0x05, 1	; 5
 66c:	83 ec       	ldi	r24, 0xC3	; 195
 66e:	99 e0       	ldi	r25, 0x09	; 9
 670:	01 97       	sbiw	r24, 0x01	; 1
 672:	f1 f7       	brne	.-4      	; 0x670 <LCD_Nokia_Reset+0x6>
 674:	00 c0       	rjmp	.+0      	; 0x676 <LCD_Nokia_Reset+0xc>
 676:	00 00       	nop
 678:	29 9a       	sbi	0x05, 1	; 5
 67a:	08 95       	ret

0000067c <LCD_Nokia_PutByte>:
 67c:	66 23       	and	r22, r22
 67e:	11 f0       	breq	.+4      	; 0x684 <LCD_Nokia_PutByte+0x8>
 680:	28 9a       	sbi	0x05, 0	; 5
 682:	01 c0       	rjmp	.+2      	; 0x686 <LCD_Nokia_PutByte+0xa>
 684:	28 98       	cbi	0x05, 0	; 5
 686:	2a 98       	cbi	0x05, 2	; 5
 688:	0e 94 06 06 	call	0xc0c	; 0xc0c <SPI_PutByte>
 68c:	2a 9a       	sbi	0x05, 2	; 5
 68e:	08 95       	ret

00000690 <LCD_Nokia_PutCommandByte>:
 690:	60 e0       	ldi	r22, 0x00	; 0
 692:	0e 94 3e 03 	call	0x67c	; 0x67c <LCD_Nokia_PutByte>
 696:	08 95       	ret

00000698 <LCD_Nokia_PutDataByte>:
 698:	61 e0       	ldi	r22, 0x01	; 1
 69a:	0e 94 3e 03 	call	0x67c	; 0x67c <LCD_Nokia_PutByte>
 69e:	08 95       	ret

000006a0 <LCD_Nokia_ClearDisplay>:
 6a0:	cf 93       	push	r28
 6a2:	df 93       	push	r29
 6a4:	c8 ef       	ldi	r28, 0xF8	; 248
 6a6:	d1 e0       	ldi	r29, 0x01	; 1
 6a8:	80 e0       	ldi	r24, 0x00	; 0
 6aa:	0e 94 4c 03 	call	0x698	; 0x698 <LCD_Nokia_PutDataByte>
 6ae:	21 97       	sbiw	r28, 0x01	; 1
 6b0:	d9 f7       	brne	.-10     	; 0x6a8 <LCD_Nokia_ClearDisplay+0x8>
 6b2:	df 91       	pop	r29
 6b4:	cf 91       	pop	r28
 6b6:	08 95       	ret

000006b8 <LCD_Nokia_Init>:
 6b8:	84 b1       	in	r24, 0x04	; 4
 6ba:	83 64       	ori	r24, 0x43	; 67
 6bc:	84 b9       	out	0x04, r24	; 4
 6be:	29 9a       	sbi	0x05, 1	; 5
 6c0:	2a 9a       	sbi	0x05, 2	; 5
 6c2:	0e 94 35 03 	call	0x66a	; 0x66a <LCD_Nokia_Reset>
 6c6:	81 e2       	ldi	r24, 0x21	; 33
 6c8:	0e 94 48 03 	call	0x690	; 0x690 <LCD_Nokia_PutCommandByte>
 6cc:	80 e9       	ldi	r24, 0x90	; 144
 6ce:	0e 94 48 03 	call	0x690	; 0x690 <LCD_Nokia_PutCommandByte>
 6d2:	87 e0       	ldi	r24, 0x07	; 7
 6d4:	0e 94 48 03 	call	0x690	; 0x690 <LCD_Nokia_PutCommandByte>
 6d8:	81 e1       	ldi	r24, 0x11	; 17
 6da:	0e 94 48 03 	call	0x690	; 0x690 <LCD_Nokia_PutCommandByte>
 6de:	80 e2       	ldi	r24, 0x20	; 32
 6e0:	0e 94 48 03 	call	0x690	; 0x690 <LCD_Nokia_PutCommandByte>
 6e4:	8c e0       	ldi	r24, 0x0C	; 12
 6e6:	0e 94 48 03 	call	0x690	; 0x690 <LCD_Nokia_PutCommandByte>
 6ea:	0e 94 50 03 	call	0x6a0	; 0x6a0 <LCD_Nokia_ClearDisplay>
 6ee:	08 95       	ret

000006f0 <LCD_Nokia_SetPosition>:
 6f0:	cf 93       	push	r28
 6f2:	c6 2f       	mov	r28, r22
 6f4:	2a 98       	cbi	0x05, 2	; 5
 6f6:	80 68       	ori	r24, 0x80	; 128
 6f8:	0e 94 48 03 	call	0x690	; 0x690 <LCD_Nokia_PutCommandByte>
 6fc:	8c 2f       	mov	r24, r28
 6fe:	80 64       	ori	r24, 0x40	; 64
 700:	0e 94 48 03 	call	0x690	; 0x690 <LCD_Nokia_PutCommandByte>
 704:	2a 9a       	sbi	0x05, 2	; 5
 706:	cf 91       	pop	r28
 708:	08 95       	ret

0000070a <LCD_Nokia_SetPixelPosition>:
 70a:	e5 e3       	ldi	r30, 0x35	; 53
 70c:	f1 e0       	ldi	r31, 0x01	; 1
 70e:	80 83       	st	Z, r24
 710:	61 83       	std	Z+1, r22	; 0x01
 712:	08 95       	ret

00000714 <LCD_Nokia_PutPixel>:
 714:	44 23       	and	r20, r20
 716:	c9 f0       	breq	.+50     	; 0x74a <LCD_Nokia_PutPixel+0x36>
 718:	96 2f       	mov	r25, r22
 71a:	96 95       	lsr	r25
 71c:	96 95       	lsr	r25
 71e:	96 95       	lsr	r25
 720:	e8 2f       	mov	r30, r24
 722:	f0 e0       	ldi	r31, 0x00	; 0
 724:	84 e5       	ldi	r24, 0x54	; 84
 726:	98 9f       	mul	r25, r24
 728:	e0 0d       	add	r30, r0
 72a:	f1 1d       	adc	r31, r1
 72c:	11 24       	eor	r1, r1
 72e:	eb 5c       	subi	r30, 0xCB	; 203
 730:	fe 4f       	sbci	r31, 0xFE	; 254
 732:	67 70       	andi	r22, 0x07	; 7
 734:	81 e0       	ldi	r24, 0x01	; 1
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	02 c0       	rjmp	.+4      	; 0x73e <LCD_Nokia_PutPixel+0x2a>
 73a:	88 0f       	add	r24, r24
 73c:	99 1f       	adc	r25, r25
 73e:	6a 95       	dec	r22
 740:	e2 f7       	brpl	.-8      	; 0x73a <LCD_Nokia_PutPixel+0x26>
 742:	92 81       	ldd	r25, Z+2	; 0x02
 744:	89 2b       	or	r24, r25
 746:	82 83       	std	Z+2, r24	; 0x02
 748:	08 95       	ret
 74a:	96 2f       	mov	r25, r22
 74c:	96 95       	lsr	r25
 74e:	96 95       	lsr	r25
 750:	96 95       	lsr	r25
 752:	e8 2f       	mov	r30, r24
 754:	f0 e0       	ldi	r31, 0x00	; 0
 756:	84 e5       	ldi	r24, 0x54	; 84
 758:	98 9f       	mul	r25, r24
 75a:	e0 0d       	add	r30, r0
 75c:	f1 1d       	adc	r31, r1
 75e:	11 24       	eor	r1, r1
 760:	eb 5c       	subi	r30, 0xCB	; 203
 762:	fe 4f       	sbci	r31, 0xFE	; 254
 764:	67 70       	andi	r22, 0x07	; 7
 766:	81 e0       	ldi	r24, 0x01	; 1
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	02 c0       	rjmp	.+4      	; 0x770 <LCD_Nokia_PutPixel+0x5c>
 76c:	88 0f       	add	r24, r24
 76e:	99 1f       	adc	r25, r25
 770:	6a 95       	dec	r22
 772:	e2 f7       	brpl	.-8      	; 0x76c <LCD_Nokia_PutPixel+0x58>
 774:	80 95       	com	r24
 776:	92 81       	ldd	r25, Z+2	; 0x02
 778:	89 23       	and	r24, r25
 77a:	82 83       	std	Z+2, r24	; 0x02
 77c:	08 95       	ret

0000077e <LCD_Nokia_SetPixel>:
 77e:	41 e0       	ldi	r20, 0x01	; 1
 780:	0e 94 8a 03 	call	0x714	; 0x714 <LCD_Nokia_PutPixel>
 784:	08 95       	ret

00000786 <LCD_Nokia_Put5Char>:
 786:	df 92       	push	r13
 788:	ef 92       	push	r14
 78a:	ff 92       	push	r15
 78c:	0f 93       	push	r16
 78e:	1f 93       	push	r17
 790:	cf 93       	push	r28
 792:	df 93       	push	r29
 794:	08 2e       	mov	r0, r24
 796:	00 0c       	add	r0, r0
 798:	99 0b       	sbc	r25, r25
 79a:	80 97       	sbiw	r24, 0x20	; 32
 79c:	7c 01       	movw	r14, r24
 79e:	ee 0c       	add	r14, r14
 7a0:	ff 1c       	adc	r15, r15
 7a2:	ee 0c       	add	r14, r14
 7a4:	ff 1c       	adc	r15, r15
 7a6:	8e 0d       	add	r24, r14
 7a8:	9f 1d       	adc	r25, r15
 7aa:	9c 01       	movw	r18, r24
 7ac:	2c 54       	subi	r18, 0x4C	; 76
 7ae:	3f 4f       	sbci	r19, 0xFF	; 255
 7b0:	79 01       	movw	r14, r18
 7b2:	0f 2e       	mov	r0, r31
 7b4:	f5 e0       	ldi	r31, 0x05	; 5
 7b6:	df 2e       	mov	r13, r31
 7b8:	f0 2d       	mov	r31, r0
 7ba:	05 e3       	ldi	r16, 0x35	; 53
 7bc:	11 e0       	ldi	r17, 0x01	; 1
 7be:	f7 01       	movw	r30, r14
 7c0:	84 91       	lpm	r24, Z
 7c2:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <byte.2571>
 7c6:	c0 e0       	ldi	r28, 0x00	; 0
 7c8:	d0 e0       	ldi	r29, 0x00	; 0
 7ca:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <byte.2571>
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	0c 2e       	mov	r0, r28
 7d2:	02 c0       	rjmp	.+4      	; 0x7d8 <LCD_Nokia_Put5Char+0x52>
 7d4:	95 95       	asr	r25
 7d6:	87 95       	ror	r24
 7d8:	0a 94       	dec	r0
 7da:	e2 f7       	brpl	.-8      	; 0x7d4 <LCD_Nokia_Put5Char+0x4e>
 7dc:	80 ff       	sbrs	r24, 0
 7de:	0a c0       	rjmp	.+20     	; 0x7f4 <LCD_Nokia_Put5Char+0x6e>
 7e0:	f8 01       	movw	r30, r16
 7e2:	61 81       	ldd	r22, Z+1	; 0x01
 7e4:	81 e0       	ldi	r24, 0x01	; 1
 7e6:	86 0f       	add	r24, r22
 7e8:	81 83       	std	Z+1, r24	; 0x01
 7ea:	41 e0       	ldi	r20, 0x01	; 1
 7ec:	80 81       	ld	r24, Z
 7ee:	0e 94 8a 03 	call	0x714	; 0x714 <LCD_Nokia_PutPixel>
 7f2:	09 c0       	rjmp	.+18     	; 0x806 <LCD_Nokia_Put5Char+0x80>
 7f4:	f8 01       	movw	r30, r16
 7f6:	61 81       	ldd	r22, Z+1	; 0x01
 7f8:	81 e0       	ldi	r24, 0x01	; 1
 7fa:	86 0f       	add	r24, r22
 7fc:	81 83       	std	Z+1, r24	; 0x01
 7fe:	40 e0       	ldi	r20, 0x00	; 0
 800:	80 81       	ld	r24, Z
 802:	0e 94 8a 03 	call	0x714	; 0x714 <LCD_Nokia_PutPixel>
 806:	21 96       	adiw	r28, 0x01	; 1
 808:	c8 30       	cpi	r28, 0x08	; 8
 80a:	d1 05       	cpc	r29, r1
 80c:	f1 f6       	brne	.-68     	; 0x7ca <LCD_Nokia_Put5Char+0x44>
 80e:	f8 01       	movw	r30, r16
 810:	80 81       	ld	r24, Z
 812:	8f 5f       	subi	r24, 0xFF	; 255
 814:	80 83       	st	Z, r24
 816:	91 81       	ldd	r25, Z+1	; 0x01
 818:	28 ef       	ldi	r18, 0xF8	; 248
 81a:	29 0f       	add	r18, r25
 81c:	21 83       	std	Z+1, r18	; 0x01
 81e:	da 94       	dec	r13
 820:	ff ef       	ldi	r31, 0xFF	; 255
 822:	ef 1a       	sub	r14, r31
 824:	ff 0a       	sbc	r15, r31
 826:	d1 10       	cpse	r13, r1
 828:	ca cf       	rjmp	.-108    	; 0x7be <LCD_Nokia_Put5Char+0x38>
 82a:	80 35       	cpi	r24, 0x50	; 80
 82c:	48 f0       	brcs	.+18     	; 0x840 <LCD_Nokia_Put5Char+0xba>
 82e:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <nokiaDisplayPixels>
 832:	90 33       	cpi	r25, 0x30	; 48
 834:	18 f4       	brcc	.+6      	; 0x83c <LCD_Nokia_Put5Char+0xb6>
 836:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <nokiaDisplayPixels+0x1>
 83a:	02 c0       	rjmp	.+4      	; 0x840 <LCD_Nokia_Put5Char+0xba>
 83c:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <nokiaDisplayPixels+0x1>
 840:	df 91       	pop	r29
 842:	cf 91       	pop	r28
 844:	1f 91       	pop	r17
 846:	0f 91       	pop	r16
 848:	ff 90       	pop	r15
 84a:	ef 90       	pop	r14
 84c:	df 90       	pop	r13
 84e:	08 95       	ret

00000850 <LCD_Nokia_Send5CharString>:
 850:	cf 93       	push	r28
 852:	df 93       	push	r29
 854:	ec 01       	movw	r28, r24
 856:	88 81       	ld	r24, Y
 858:	88 23       	and	r24, r24
 85a:	31 f0       	breq	.+12     	; 0x868 <LCD_Nokia_Send5CharString+0x18>
 85c:	21 96       	adiw	r28, 0x01	; 1
 85e:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 862:	89 91       	ld	r24, Y+
 864:	81 11       	cpse	r24, r1
 866:	fb cf       	rjmp	.-10     	; 0x85e <LCD_Nokia_Send5CharString+0xe>
 868:	df 91       	pop	r29
 86a:	cf 91       	pop	r28
 86c:	08 95       	ret

0000086e <LCD_Nokia_Send5Integer>:
 86e:	cf 92       	push	r12
 870:	df 92       	push	r13
 872:	ef 92       	push	r14
 874:	ff 92       	push	r15
 876:	cf 93       	push	r28
 878:	6b 01       	movw	r12, r22
 87a:	7c 01       	movw	r14, r24
 87c:	99 23       	and	r25, r25
 87e:	74 f4       	brge	.+28     	; 0x89c <LCD_Nokia_Send5Integer+0x2e>
 880:	8d e2       	ldi	r24, 0x2D	; 45
 882:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 886:	c6 01       	movw	r24, r12
 888:	99 23       	and	r25, r25
 88a:	24 f4       	brge	.+8      	; 0x894 <LCD_Nokia_Send5Integer+0x26>
 88c:	88 27       	eor	r24, r24
 88e:	99 27       	eor	r25, r25
 890:	8c 19       	sub	r24, r12
 892:	9d 09       	sbc	r25, r13
 894:	6c 01       	movw	r12, r24
 896:	99 0f       	add	r25, r25
 898:	ee 08       	sbc	r14, r14
 89a:	ff 08       	sbc	r15, r15
 89c:	d7 01       	movw	r26, r14
 89e:	c6 01       	movw	r24, r12
 8a0:	b7 01       	movw	r22, r14
 8a2:	a6 01       	movw	r20, r12
 8a4:	4a 50       	subi	r20, 0x0A	; 10
 8a6:	51 09       	sbc	r21, r1
 8a8:	61 09       	sbc	r22, r1
 8aa:	71 09       	sbc	r23, r1
 8ac:	4a 35       	cpi	r20, 0x5A	; 90
 8ae:	51 05       	cpc	r21, r1
 8b0:	61 05       	cpc	r22, r1
 8b2:	71 05       	cpc	r23, r1
 8b4:	48 f0       	brcs	.+18     	; 0x8c8 <LCD_Nokia_Send5Integer+0x5a>
 8b6:	21 e0       	ldi	r18, 0x01	; 1
 8b8:	3a e0       	ldi	r19, 0x0A	; 10
 8ba:	c3 16       	cp	r12, r19
 8bc:	d1 04       	cpc	r13, r1
 8be:	e1 04       	cpc	r14, r1
 8c0:	f1 04       	cpc	r15, r1
 8c2:	1c f0       	brlt	.+6      	; 0x8ca <LCD_Nokia_Send5Integer+0x5c>
 8c4:	20 e0       	ldi	r18, 0x00	; 0
 8c6:	01 c0       	rjmp	.+2      	; 0x8ca <LCD_Nokia_Send5Integer+0x5c>
 8c8:	22 e0       	ldi	r18, 0x02	; 2
 8ca:	ac 01       	movw	r20, r24
 8cc:	bd 01       	movw	r22, r26
 8ce:	44 56       	subi	r20, 0x64	; 100
 8d0:	51 09       	sbc	r21, r1
 8d2:	61 09       	sbc	r22, r1
 8d4:	71 09       	sbc	r23, r1
 8d6:	44 38       	cpi	r20, 0x84	; 132
 8d8:	53 40       	sbci	r21, 0x03	; 3
 8da:	61 05       	cpc	r22, r1
 8dc:	71 05       	cpc	r23, r1
 8de:	08 f4       	brcc	.+2      	; 0x8e2 <LCD_Nokia_Send5Integer+0x74>
 8e0:	23 e0       	ldi	r18, 0x03	; 3
 8e2:	ac 01       	movw	r20, r24
 8e4:	bd 01       	movw	r22, r26
 8e6:	48 5e       	subi	r20, 0xE8	; 232
 8e8:	53 40       	sbci	r21, 0x03	; 3
 8ea:	61 09       	sbc	r22, r1
 8ec:	71 09       	sbc	r23, r1
 8ee:	48 32       	cpi	r20, 0x28	; 40
 8f0:	53 42       	sbci	r21, 0x23	; 35
 8f2:	61 05       	cpc	r22, r1
 8f4:	71 05       	cpc	r23, r1
 8f6:	08 f4       	brcc	.+2      	; 0x8fa <LCD_Nokia_Send5Integer+0x8c>
 8f8:	b7 c0       	rjmp	.+366    	; 0xa68 <__stack+0x169>
 8fa:	80 51       	subi	r24, 0x10	; 16
 8fc:	97 42       	sbci	r25, 0x27	; 39
 8fe:	a1 09       	sbc	r26, r1
 900:	b1 09       	sbc	r27, r1
 902:	80 39       	cpi	r24, 0x90	; 144
 904:	9f 45       	sbci	r25, 0x5F	; 95
 906:	a1 40       	sbci	r26, 0x01	; 1
 908:	b1 05       	cpc	r27, r1
 90a:	08 f4       	brcc	.+2      	; 0x90e <__stack+0xf>
 90c:	6c c0       	rjmp	.+216    	; 0x9e6 <__stack+0xe7>
 90e:	23 30       	cpi	r18, 0x03	; 3
 910:	e1 f0       	breq	.+56     	; 0x94a <__stack+0x4b>
 912:	21 30       	cpi	r18, 0x01	; 1
 914:	19 f0       	breq	.+6      	; 0x91c <__stack+0x1d>
 916:	22 30       	cpi	r18, 0x02	; 2
 918:	31 f0       	breq	.+12     	; 0x926 <__stack+0x27>
 91a:	a1 c0       	rjmp	.+322    	; 0xa5e <__stack+0x15f>
 91c:	80 e3       	ldi	r24, 0x30	; 48
 91e:	8c 0d       	add	r24, r12
 920:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 924:	ac c0       	rjmp	.+344    	; 0xa7e <__stack+0x17f>
 926:	c7 01       	movw	r24, r14
 928:	b6 01       	movw	r22, r12
 92a:	2a e0       	ldi	r18, 0x0A	; 10
 92c:	30 e0       	ldi	r19, 0x00	; 0
 92e:	40 e0       	ldi	r20, 0x00	; 0
 930:	50 e0       	ldi	r21, 0x00	; 0
 932:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__divmodsi4>
 936:	c6 2f       	mov	r28, r22
 938:	80 e3       	ldi	r24, 0x30	; 48
 93a:	82 0f       	add	r24, r18
 93c:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 940:	80 e3       	ldi	r24, 0x30	; 48
 942:	8c 0f       	add	r24, r28
 944:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 948:	9a c0       	rjmp	.+308    	; 0xa7e <__stack+0x17f>
 94a:	c7 01       	movw	r24, r14
 94c:	b6 01       	movw	r22, r12
 94e:	24 e6       	ldi	r18, 0x64	; 100
 950:	30 e0       	ldi	r19, 0x00	; 0
 952:	40 e0       	ldi	r20, 0x00	; 0
 954:	50 e0       	ldi	r21, 0x00	; 0
 956:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__divmodsi4>
 95a:	6b 01       	movw	r12, r22
 95c:	7c 01       	movw	r14, r24
 95e:	80 e3       	ldi	r24, 0x30	; 48
 960:	82 0f       	add	r24, r18
 962:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 966:	c7 01       	movw	r24, r14
 968:	b6 01       	movw	r22, r12
 96a:	2a e0       	ldi	r18, 0x0A	; 10
 96c:	30 e0       	ldi	r19, 0x00	; 0
 96e:	40 e0       	ldi	r20, 0x00	; 0
 970:	50 e0       	ldi	r21, 0x00	; 0
 972:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__divmodsi4>
 976:	c6 2f       	mov	r28, r22
 978:	80 e3       	ldi	r24, 0x30	; 48
 97a:	82 0f       	add	r24, r18
 97c:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 980:	80 e3       	ldi	r24, 0x30	; 48
 982:	8c 0f       	add	r24, r28
 984:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 988:	7a c0       	rjmp	.+244    	; 0xa7e <__stack+0x17f>
 98a:	c7 01       	movw	r24, r14
 98c:	b6 01       	movw	r22, r12
 98e:	28 ee       	ldi	r18, 0xE8	; 232
 990:	33 e0       	ldi	r19, 0x03	; 3
 992:	40 e0       	ldi	r20, 0x00	; 0
 994:	50 e0       	ldi	r21, 0x00	; 0
 996:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__divmodsi4>
 99a:	6b 01       	movw	r12, r22
 99c:	7c 01       	movw	r14, r24
 99e:	80 e3       	ldi	r24, 0x30	; 48
 9a0:	82 0f       	add	r24, r18
 9a2:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 9a6:	c7 01       	movw	r24, r14
 9a8:	b6 01       	movw	r22, r12
 9aa:	24 e6       	ldi	r18, 0x64	; 100
 9ac:	30 e0       	ldi	r19, 0x00	; 0
 9ae:	40 e0       	ldi	r20, 0x00	; 0
 9b0:	50 e0       	ldi	r21, 0x00	; 0
 9b2:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__divmodsi4>
 9b6:	6b 01       	movw	r12, r22
 9b8:	7c 01       	movw	r14, r24
 9ba:	80 e3       	ldi	r24, 0x30	; 48
 9bc:	82 0f       	add	r24, r18
 9be:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 9c2:	c7 01       	movw	r24, r14
 9c4:	b6 01       	movw	r22, r12
 9c6:	2a e0       	ldi	r18, 0x0A	; 10
 9c8:	30 e0       	ldi	r19, 0x00	; 0
 9ca:	40 e0       	ldi	r20, 0x00	; 0
 9cc:	50 e0       	ldi	r21, 0x00	; 0
 9ce:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__divmodsi4>
 9d2:	c6 2f       	mov	r28, r22
 9d4:	80 e3       	ldi	r24, 0x30	; 48
 9d6:	82 0f       	add	r24, r18
 9d8:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 9dc:	80 e3       	ldi	r24, 0x30	; 48
 9de:	8c 0f       	add	r24, r28
 9e0:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 9e4:	4c c0       	rjmp	.+152    	; 0xa7e <__stack+0x17f>
 9e6:	c7 01       	movw	r24, r14
 9e8:	b6 01       	movw	r22, r12
 9ea:	20 e1       	ldi	r18, 0x10	; 16
 9ec:	37 e2       	ldi	r19, 0x27	; 39
 9ee:	40 e0       	ldi	r20, 0x00	; 0
 9f0:	50 e0       	ldi	r21, 0x00	; 0
 9f2:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__divmodsi4>
 9f6:	6b 01       	movw	r12, r22
 9f8:	7c 01       	movw	r14, r24
 9fa:	80 e3       	ldi	r24, 0x30	; 48
 9fc:	82 0f       	add	r24, r18
 9fe:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 a02:	c7 01       	movw	r24, r14
 a04:	b6 01       	movw	r22, r12
 a06:	28 ee       	ldi	r18, 0xE8	; 232
 a08:	33 e0       	ldi	r19, 0x03	; 3
 a0a:	40 e0       	ldi	r20, 0x00	; 0
 a0c:	50 e0       	ldi	r21, 0x00	; 0
 a0e:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__divmodsi4>
 a12:	6b 01       	movw	r12, r22
 a14:	7c 01       	movw	r14, r24
 a16:	80 e3       	ldi	r24, 0x30	; 48
 a18:	82 0f       	add	r24, r18
 a1a:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 a1e:	c7 01       	movw	r24, r14
 a20:	b6 01       	movw	r22, r12
 a22:	24 e6       	ldi	r18, 0x64	; 100
 a24:	30 e0       	ldi	r19, 0x00	; 0
 a26:	40 e0       	ldi	r20, 0x00	; 0
 a28:	50 e0       	ldi	r21, 0x00	; 0
 a2a:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__divmodsi4>
 a2e:	6b 01       	movw	r12, r22
 a30:	7c 01       	movw	r14, r24
 a32:	80 e3       	ldi	r24, 0x30	; 48
 a34:	82 0f       	add	r24, r18
 a36:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 a3a:	c7 01       	movw	r24, r14
 a3c:	b6 01       	movw	r22, r12
 a3e:	2a e0       	ldi	r18, 0x0A	; 10
 a40:	30 e0       	ldi	r19, 0x00	; 0
 a42:	40 e0       	ldi	r20, 0x00	; 0
 a44:	50 e0       	ldi	r21, 0x00	; 0
 a46:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__divmodsi4>
 a4a:	c6 2f       	mov	r28, r22
 a4c:	80 e3       	ldi	r24, 0x30	; 48
 a4e:	82 0f       	add	r24, r18
 a50:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 a54:	80 e3       	ldi	r24, 0x30	; 48
 a56:	8c 0f       	add	r24, r28
 a58:	0e 94 c3 03 	call	0x786	; 0x786 <LCD_Nokia_Put5Char>
 a5c:	10 c0       	rjmp	.+32     	; 0xa7e <__stack+0x17f>
 a5e:	8f e0       	ldi	r24, 0x0F	; 15
 a60:	91 e0       	ldi	r25, 0x01	; 1
 a62:	0e 94 28 04 	call	0x850	; 0x850 <LCD_Nokia_Send5CharString>
 a66:	0b c0       	rjmp	.+22     	; 0xa7e <__stack+0x17f>
 a68:	80 51       	subi	r24, 0x10	; 16
 a6a:	97 42       	sbci	r25, 0x27	; 39
 a6c:	a1 09       	sbc	r26, r1
 a6e:	b1 09       	sbc	r27, r1
 a70:	80 39       	cpi	r24, 0x90	; 144
 a72:	9f 45       	sbci	r25, 0x5F	; 95
 a74:	a1 40       	sbci	r26, 0x01	; 1
 a76:	b1 05       	cpc	r27, r1
 a78:	08 f4       	brcc	.+2      	; 0xa7c <__stack+0x17d>
 a7a:	b5 cf       	rjmp	.-150    	; 0x9e6 <__stack+0xe7>
 a7c:	86 cf       	rjmp	.-244    	; 0x98a <__stack+0x8b>
 a7e:	cf 91       	pop	r28
 a80:	ff 90       	pop	r15
 a82:	ef 90       	pop	r14
 a84:	df 90       	pop	r13
 a86:	cf 90       	pop	r12
 a88:	08 95       	ret

00000a8a <LCD_Nokia_DrawRectangle>:
 a8a:	ef 92       	push	r14
 a8c:	ff 92       	push	r15
 a8e:	0f 93       	push	r16
 a90:	1f 93       	push	r17
 a92:	cf 93       	push	r28
 a94:	df 93       	push	r29
 a96:	e8 2e       	mov	r14, r24
 a98:	d6 2f       	mov	r29, r22
 a9a:	14 2f       	mov	r17, r20
 a9c:	f2 2e       	mov	r15, r18
 a9e:	48 17       	cp	r20, r24
 aa0:	10 f4       	brcc	.+4      	; 0xaa6 <LCD_Nokia_DrawRectangle+0x1c>
 aa2:	e4 2e       	mov	r14, r20
 aa4:	18 2f       	mov	r17, r24
 aa6:	fd 16       	cp	r15, r29
 aa8:	b8 f5       	brcc	.+110    	; 0xb18 <LCD_Nokia_DrawRectangle+0x8e>
 aaa:	8d 2f       	mov	r24, r29
 aac:	df 2d       	mov	r29, r15
 aae:	f8 2e       	mov	r15, r24
 ab0:	33 c0       	rjmp	.+102    	; 0xb18 <LCD_Nokia_DrawRectangle+0x8e>
 ab2:	1e 15       	cp	r17, r14
 ab4:	78 f4       	brcc	.+30     	; 0xad4 <LCD_Nokia_DrawRectangle+0x4a>
 ab6:	1e c0       	rjmp	.+60     	; 0xaf4 <LCD_Nokia_DrawRectangle+0x6a>
 ab8:	ce 2d       	mov	r28, r14
 aba:	6d 2f       	mov	r22, r29
 abc:	8c 2f       	mov	r24, r28
 abe:	0e 94 bf 03 	call	0x77e	; 0x77e <LCD_Nokia_SetPixel>
 ac2:	cf 5f       	subi	r28, 0xFF	; 255
 ac4:	1c 17       	cp	r17, r28
 ac6:	c8 f7       	brcc	.-14     	; 0xaba <LCD_Nokia_DrawRectangle+0x30>
 ac8:	df 5f       	subi	r29, 0xFF	; 255
 aca:	fd 16       	cp	r15, r29
 acc:	40 f1       	brcs	.+80     	; 0xb1e <LCD_Nokia_DrawRectangle+0x94>
 ace:	1e 15       	cp	r17, r14
 ad0:	98 f7       	brcc	.-26     	; 0xab8 <LCD_Nokia_DrawRectangle+0x2e>
 ad2:	fa cf       	rjmp	.-12     	; 0xac8 <LCD_Nokia_DrawRectangle+0x3e>
 ad4:	ce 2d       	mov	r28, r14
 ad6:	6d 2f       	mov	r22, r29
 ad8:	8c 2f       	mov	r24, r28
 ada:	0e 94 bf 03 	call	0x77e	; 0x77e <LCD_Nokia_SetPixel>
 ade:	cf 5f       	subi	r28, 0xFF	; 255
 ae0:	1c 17       	cp	r17, r28
 ae2:	c8 f7       	brcc	.-14     	; 0xad6 <LCD_Nokia_DrawRectangle+0x4c>
 ae4:	ce 2d       	mov	r28, r14
 ae6:	6f 2d       	mov	r22, r15
 ae8:	8c 2f       	mov	r24, r28
 aea:	0e 94 bf 03 	call	0x77e	; 0x77e <LCD_Nokia_SetPixel>
 aee:	cf 5f       	subi	r28, 0xFF	; 255
 af0:	1c 17       	cp	r17, r28
 af2:	c8 f7       	brcc	.-14     	; 0xae6 <LCD_Nokia_DrawRectangle+0x5c>
 af4:	fd 16       	cp	r15, r29
 af6:	98 f0       	brcs	.+38     	; 0xb1e <LCD_Nokia_DrawRectangle+0x94>
 af8:	cd 2f       	mov	r28, r29
 afa:	6c 2f       	mov	r22, r28
 afc:	8e 2d       	mov	r24, r14
 afe:	0e 94 bf 03 	call	0x77e	; 0x77e <LCD_Nokia_SetPixel>
 b02:	cf 5f       	subi	r28, 0xFF	; 255
 b04:	fc 16       	cp	r15, r28
 b06:	c8 f7       	brcc	.-14     	; 0xafa <LCD_Nokia_DrawRectangle+0x70>
 b08:	6d 2f       	mov	r22, r29
 b0a:	81 2f       	mov	r24, r17
 b0c:	0e 94 bf 03 	call	0x77e	; 0x77e <LCD_Nokia_SetPixel>
 b10:	df 5f       	subi	r29, 0xFF	; 255
 b12:	fd 16       	cp	r15, r29
 b14:	c8 f7       	brcc	.-14     	; 0xb08 <LCD_Nokia_DrawRectangle+0x7e>
 b16:	03 c0       	rjmp	.+6      	; 0xb1e <LCD_Nokia_DrawRectangle+0x94>
 b18:	00 23       	and	r16, r16
 b1a:	59 f2       	breq	.-106    	; 0xab2 <LCD_Nokia_DrawRectangle+0x28>
 b1c:	d8 cf       	rjmp	.-80     	; 0xace <LCD_Nokia_DrawRectangle+0x44>
 b1e:	df 91       	pop	r29
 b20:	cf 91       	pop	r28
 b22:	1f 91       	pop	r17
 b24:	0f 91       	pop	r16
 b26:	ff 90       	pop	r15
 b28:	ef 90       	pop	r14
 b2a:	08 95       	ret

00000b2c <LCD_Nokia_DrawUnfilledRectangle>:
 b2c:	ef 92       	push	r14
 b2e:	ff 92       	push	r15
 b30:	0f 93       	push	r16
 b32:	1f 93       	push	r17
 b34:	cf 93       	push	r28
 b36:	df 93       	push	r29
 b38:	00 23       	and	r16, r16
 b3a:	a1 f0       	breq	.+40     	; 0xb64 <LCD_Nokia_DrawUnfilledRectangle+0x38>
 b3c:	e8 2e       	mov	r14, r24
 b3e:	e0 0e       	add	r14, r16
 b40:	cf ef       	ldi	r28, 0xFF	; 255
 b42:	c2 0f       	add	r28, r18
 b44:	df ef       	ldi	r29, 0xFF	; 255
 b46:	d4 0f       	add	r29, r20
 b48:	11 e0       	ldi	r17, 0x01	; 1
 b4a:	16 0f       	add	r17, r22
 b4c:	ff 24       	eor	r15, r15
 b4e:	f3 94       	inc	r15
 b50:	f8 0e       	add	r15, r24
 b52:	00 e0       	ldi	r16, 0x00	; 0
 b54:	0e 94 45 05 	call	0xa8a	; 0xa8a <LCD_Nokia_DrawRectangle>
 b58:	8f 2d       	mov	r24, r15
 b5a:	61 2f       	mov	r22, r17
 b5c:	4d 2f       	mov	r20, r29
 b5e:	2c 2f       	mov	r18, r28
 b60:	ef 10       	cpse	r14, r15
 b62:	ee cf       	rjmp	.-36     	; 0xb40 <LCD_Nokia_DrawUnfilledRectangle+0x14>
 b64:	df 91       	pop	r29
 b66:	cf 91       	pop	r28
 b68:	1f 91       	pop	r17
 b6a:	0f 91       	pop	r16
 b6c:	ff 90       	pop	r15
 b6e:	ef 90       	pop	r14
 b70:	08 95       	ret

00000b72 <LCD_Nokia_UpdateFullScreen>:
// 		}
// 	}
// }

void LCD_Nokia_UpdateFullScreen (void)
{
 b72:	0f 93       	push	r16
 b74:	1f 93       	push	r17
 b76:	cf 93       	push	r28
 b78:	df 93       	push	r29
	LCD_Nokia_SetPosition(0, 0);
 b7a:	60 e0       	ldi	r22, 0x00	; 0
 b7c:	80 e0       	ldi	r24, 0x00	; 0
 b7e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <LCD_Nokia_SetPosition>
 b82:	c7 e3       	ldi	r28, 0x37	; 55
 b84:	d1 e0       	ldi	r29, 0x01	; 1
 b86:	0f e2       	ldi	r16, 0x2F	; 47
 b88:	13 e0       	ldi	r17, 0x03	; 3
	for (uint16_t i = 0; i < LCD_NOKIA_BUFFER_SIZE; i++)	LCD_Nokia_PutDataByte(nokiaDisplayPixels.screen[i]);
 b8a:	89 91       	ld	r24, Y+
 b8c:	0e 94 4c 03 	call	0x698	; 0x698 <LCD_Nokia_PutDataByte>
 b90:	c0 17       	cp	r28, r16
 b92:	d1 07       	cpc	r29, r17
 b94:	d1 f7       	brne	.-12     	; 0xb8a <LCD_Nokia_UpdateFullScreen+0x18>
}
 b96:	df 91       	pop	r29
 b98:	cf 91       	pop	r28
 b9a:	1f 91       	pop	r17
 b9c:	0f 91       	pop	r16
 b9e:	08 95       	ret

00000ba0 <setup>:
}

void setup (void)
{
	IO_Init();
	I2C_Init(I2C_SCL_FREQUENCY, I2C_PRESCALER_BITS);
 ba0:	40 e0       	ldi	r20, 0x00	; 0
 ba2:	60 ea       	ldi	r22, 0xA0	; 160
 ba4:	76 e8       	ldi	r23, 0x86	; 134
 ba6:	81 e0       	ldi	r24, 0x01	; 1
 ba8:	90 e0       	ldi	r25, 0x00	; 0
 baa:	0e 94 32 02 	call	0x464	; 0x464 <I2C_Init>
	SPI_Master_Init();
 bae:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <SPI_Master_Init>
	
	LCD_Nokia_Init();
 bb2:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <LCD_Nokia_Init>
	
	sei();
 bb6:	78 94       	sei
 bb8:	08 95       	ret

00000bba <main>:
}

int main (void)
{
	setup();
 bba:	0e 94 d0 05 	call	0xba0	; 0xba0 <setup>
	
	LCD_Nokia_DrawUnfilledRectangle(0, 0, 83, 40, 4);
 bbe:	04 e0       	ldi	r16, 0x04	; 4
 bc0:	28 e2       	ldi	r18, 0x28	; 40
 bc2:	43 e5       	ldi	r20, 0x53	; 83
 bc4:	60 e0       	ldi	r22, 0x00	; 0
 bc6:	80 e0       	ldi	r24, 0x00	; 0
 bc8:	0e 94 96 05 	call	0xb2c	; 0xb2c <LCD_Nokia_DrawUnfilledRectangle>
	
	while (1)
	{
		DS1307_LCD_Nokia_OutTime();
 bcc:	0e 94 cd 01 	call	0x39a	; 0x39a <DS1307_LCD_Nokia_OutTime>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 bd0:	2f e7       	ldi	r18, 0x7F	; 127
 bd2:	84 e8       	ldi	r24, 0x84	; 132
 bd4:	9e e1       	ldi	r25, 0x1E	; 30
 bd6:	21 50       	subi	r18, 0x01	; 1
 bd8:	80 40       	sbci	r24, 0x00	; 0
 bda:	90 40       	sbci	r25, 0x00	; 0
 bdc:	e1 f7       	brne	.-8      	; 0xbd6 <main+0x1c>
 bde:	00 c0       	rjmp	.+0      	; 0xbe0 <main+0x26>
 be0:	00 00       	nop
 be2:	f4 cf       	rjmp	.-24     	; 0xbcc <main+0x12>

00000be4 <SPI_Master_Init>:
	SPCR0 |= (1 << SPIE);														//	Activate SPI interrupt
 	volatile uint8_t temp = SPSR0;												//	Clear the interrupt flag
 	temp = SPDR0;																//	Clear the interrupt flag
	temp = 0x00;																//	Here assign any "garbage" value to temp
	SPDR0 = temp;																//	and put it in the SPDR to activate the transfer process
}
 be4:	cf 93       	push	r28
 be6:	df 93       	push	r29
 be8:	1f 92       	push	r1
 bea:	cd b7       	in	r28, 0x3d	; 61
 bec:	de b7       	in	r29, 0x3e	; 62
 bee:	84 b1       	in	r24, 0x04	; 4
 bf0:	8c 62       	ori	r24, 0x2C	; 44
 bf2:	84 b9       	out	0x04, r24	; 4
 bf4:	24 98       	cbi	0x04, 4	; 4
 bf6:	8c b5       	in	r24, 0x2c	; 44
 bf8:	80 65       	ori	r24, 0x50	; 80
 bfa:	8c bd       	out	0x2c, r24	; 44
 bfc:	8d b5       	in	r24, 0x2d	; 45
 bfe:	89 83       	std	Y+1, r24	; 0x01
 c00:	8e b5       	in	r24, 0x2e	; 46
 c02:	89 83       	std	Y+1, r24	; 0x01
 c04:	0f 90       	pop	r0
 c06:	df 91       	pop	r29
 c08:	cf 91       	pop	r28
 c0a:	08 95       	ret

00000c0c <SPI_PutByte>:
 c0c:	8e bd       	out	0x2e, r24	; 46
 c0e:	0d b4       	in	r0, 0x2d	; 45
 c10:	07 fe       	sbrs	r0, 7
 c12:	fd cf       	rjmp	.-6      	; 0xc0e <SPI_PutByte+0x2>
 c14:	08 95       	ret

00000c16 <__vector_17>:

ISR (SPI0_STC_vect)
{
 c16:	1f 92       	push	r1
 c18:	0f 92       	push	r0
 c1a:	0f b6       	in	r0, 0x3f	; 63
 c1c:	0f 92       	push	r0
 c1e:	11 24       	eor	r1, r1
 c20:	8f 93       	push	r24
 c22:	ef 93       	push	r30
 c24:	ff 93       	push	r31
//	SPI_ReceiveBuffer[SPI_CharacterCounter] = SPDR;								//	Receive byte from the Slave	(for full-duplex communication)
	if (SPI_TransmitBuffer[SPI_CharacterCounter] != 0)							//	If not end of data
 c26:	e0 91 37 01 	lds	r30, 0x0137	; 0x800137 <SPI_CharacterCounter>
 c2a:	f0 e0       	ldi	r31, 0x00	; 0
 c2c:	e8 58       	subi	r30, 0x88	; 136
 c2e:	fe 4f       	sbci	r31, 0xFE	; 254
 c30:	80 81       	ld	r24, Z
 c32:	88 23       	and	r24, r24
 c34:	61 f0       	breq	.+24     	; 0xc4e <__vector_17+0x38>
	{
		SPDR0 = SPI_TransmitBuffer[SPI_CharacterCounter++];						//	Put the next byte in the SPI data register
 c36:	e0 91 37 01 	lds	r30, 0x0137	; 0x800137 <SPI_CharacterCounter>
 c3a:	81 e0       	ldi	r24, 0x01	; 1
 c3c:	8e 0f       	add	r24, r30
 c3e:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <SPI_CharacterCounter>
 c42:	f0 e0       	ldi	r31, 0x00	; 0
 c44:	e8 58       	subi	r30, 0x88	; 136
 c46:	fe 4f       	sbci	r31, 0xFE	; 254
 c48:	80 81       	ld	r24, Z
 c4a:	8e bd       	out	0x2e, r24	; 46
 c4c:	08 c0       	rjmp	.+16     	; 0xc5e <__vector_17+0x48>
	}
	else
	{
		SPCR0 &= ~(1 << SPIE);													//	Disable SPI interrupt
 c4e:	8c b5       	in	r24, 0x2c	; 44
 c50:	8f 77       	andi	r24, 0x7F	; 127
 c52:	8c bd       	out	0x2c, r24	; 44
		SPI_TransmitSuccess = true;												//	Set the success flag
 c54:	81 e0       	ldi	r24, 0x01	; 1
 c56:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <SPI_TransmitSuccess>
		SPI_CharacterCounter = 0;												//	Reset character counter
 c5a:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <SPI_CharacterCounter>
	}
}
 c5e:	ff 91       	pop	r31
 c60:	ef 91       	pop	r30
 c62:	8f 91       	pop	r24
 c64:	0f 90       	pop	r0
 c66:	0f be       	out	0x3f, r0	; 63
 c68:	0f 90       	pop	r0
 c6a:	1f 90       	pop	r1
 c6c:	18 95       	reti

00000c6e <__udivmodsi4>:
 c6e:	a1 e2       	ldi	r26, 0x21	; 33
 c70:	1a 2e       	mov	r1, r26
 c72:	aa 1b       	sub	r26, r26
 c74:	bb 1b       	sub	r27, r27
 c76:	fd 01       	movw	r30, r26
 c78:	0d c0       	rjmp	.+26     	; 0xc94 <__udivmodsi4_ep>

00000c7a <__udivmodsi4_loop>:
 c7a:	aa 1f       	adc	r26, r26
 c7c:	bb 1f       	adc	r27, r27
 c7e:	ee 1f       	adc	r30, r30
 c80:	ff 1f       	adc	r31, r31
 c82:	a2 17       	cp	r26, r18
 c84:	b3 07       	cpc	r27, r19
 c86:	e4 07       	cpc	r30, r20
 c88:	f5 07       	cpc	r31, r21
 c8a:	20 f0       	brcs	.+8      	; 0xc94 <__udivmodsi4_ep>
 c8c:	a2 1b       	sub	r26, r18
 c8e:	b3 0b       	sbc	r27, r19
 c90:	e4 0b       	sbc	r30, r20
 c92:	f5 0b       	sbc	r31, r21

00000c94 <__udivmodsi4_ep>:
 c94:	66 1f       	adc	r22, r22
 c96:	77 1f       	adc	r23, r23
 c98:	88 1f       	adc	r24, r24
 c9a:	99 1f       	adc	r25, r25
 c9c:	1a 94       	dec	r1
 c9e:	69 f7       	brne	.-38     	; 0xc7a <__udivmodsi4_loop>
 ca0:	60 95       	com	r22
 ca2:	70 95       	com	r23
 ca4:	80 95       	com	r24
 ca6:	90 95       	com	r25
 ca8:	9b 01       	movw	r18, r22
 caa:	ac 01       	movw	r20, r24
 cac:	bd 01       	movw	r22, r26
 cae:	cf 01       	movw	r24, r30
 cb0:	08 95       	ret

00000cb2 <__divmodsi4>:
 cb2:	05 2e       	mov	r0, r21
 cb4:	97 fb       	bst	r25, 7
 cb6:	1e f4       	brtc	.+6      	; 0xcbe <__divmodsi4+0xc>
 cb8:	00 94       	com	r0
 cba:	0e 94 70 06 	call	0xce0	; 0xce0 <__negsi2>
 cbe:	57 fd       	sbrc	r21, 7
 cc0:	07 d0       	rcall	.+14     	; 0xcd0 <__divmodsi4_neg2>
 cc2:	0e 94 37 06 	call	0xc6e	; 0xc6e <__udivmodsi4>
 cc6:	07 fc       	sbrc	r0, 7
 cc8:	03 d0       	rcall	.+6      	; 0xcd0 <__divmodsi4_neg2>
 cca:	4e f4       	brtc	.+18     	; 0xcde <__divmodsi4_exit>
 ccc:	0c 94 70 06 	jmp	0xce0	; 0xce0 <__negsi2>

00000cd0 <__divmodsi4_neg2>:
 cd0:	50 95       	com	r21
 cd2:	40 95       	com	r20
 cd4:	30 95       	com	r19
 cd6:	21 95       	neg	r18
 cd8:	3f 4f       	sbci	r19, 0xFF	; 255
 cda:	4f 4f       	sbci	r20, 0xFF	; 255
 cdc:	5f 4f       	sbci	r21, 0xFF	; 255

00000cde <__divmodsi4_exit>:
 cde:	08 95       	ret

00000ce0 <__negsi2>:
 ce0:	90 95       	com	r25
 ce2:	80 95       	com	r24
 ce4:	70 95       	com	r23
 ce6:	61 95       	neg	r22
 ce8:	7f 4f       	sbci	r23, 0xFF	; 255
 cea:	8f 4f       	sbci	r24, 0xFF	; 255
 cec:	9f 4f       	sbci	r25, 0xFF	; 255
 cee:	08 95       	ret

00000cf0 <_exit>:
 cf0:	f8 94       	cli

00000cf2 <__stop_program>:
 cf2:	ff cf       	rjmp	.-2      	; 0xcf2 <__stop_program>
